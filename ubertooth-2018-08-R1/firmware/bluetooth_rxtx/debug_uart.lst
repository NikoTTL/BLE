ARM GAS  /tmp/ccwwlcoZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"debug_uart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.debug_uart_init,"ax",%progbits
  19              		.align	1
  20              		.global	debug_uart_init
  21              		.thumb
  22              		.thumb_func
  24              	debug_uart_init:
  25              	.LFB0:
  26              		.file 1 "debug_uart.c"
   1:debug_uart.c  **** #include <stdarg.h>
   2:debug_uart.c  **** #include <stdio.h>
   3:debug_uart.c  **** #include <string.h>
   4:debug_uart.c  **** 
   5:debug_uart.c  **** #include "ubertooth.h"
   6:debug_uart.c  **** #include "tinyprintf.h"
   7:debug_uart.c  **** 
   8:debug_uart.c  **** int debug_dma_active = 0;
   9:debug_uart.c  **** char debug_buffer[256];
  10:debug_uart.c  **** 
  11:debug_uart.c  **** void debug_uart_init(int flow_control) {
  27              		.loc 1 11 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  12:debug_uart.c  **** 	// power on UART1 peripheral
  13:debug_uart.c  **** 	PCONP |= PCONP_PCUART1;
  33              		.loc 1 13 0
  34 0000 274A     		ldr	r2, .L9
  14:debug_uart.c  **** 
  15:debug_uart.c  **** 	// 8N1, enable access to divisor latches
  16:debug_uart.c  **** 	U1LCR = 0b10000011;
  17:debug_uart.c  **** 
  18:debug_uart.c  **** 	// divisor: 11, fractional: 3/13. final baud: 115,411
  19:debug_uart.c  **** 	U1DLL = 11;
  35              		.loc 1 19 0
  36 0002 0B21     		movs	r1, #11
  13:debug_uart.c  **** 
  37              		.loc 1 13 0
  38 0004 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccwwlcoZ.s 			page 2


  39 0006 43F01003 		orr	r3, r3, #16
  40 000a 1360     		str	r3, [r2]
  16:debug_uart.c  **** 
  41              		.loc 1 16 0
  42 000c 254B     		ldr	r3, .L9+4
  43 000e 8322     		movs	r2, #131
  44 0010 1A60     		str	r2, [r3]
  45              		.loc 1 19 0
  46 0012 254A     		ldr	r2, .L9+8
  47 0014 0433     		adds	r3, r3, #4
  48 0016 1160     		str	r1, [r2]
  20:debug_uart.c  **** 	U1DLM = 0;
  49              		.loc 1 20 0
  50 0018 0021     		movs	r1, #0
  51 001a 5160     		str	r1, [r2, #4]
  21:debug_uart.c  **** 	U1FDR = (3 << 0) | (13 << 4);
  52              		.loc 1 21 0
  53 001c D321     		movs	r1, #211
  54 001e 9162     		str	r1, [r2, #40]
  22:debug_uart.c  **** 
  23:debug_uart.c  **** 	// block access to divisor latches
  24:debug_uart.c  **** 	U1LCR &= ~0b10000000;
  55              		.loc 1 24 0
  56 0020 53F8042C 		ldr	r2, [r3, #-4]
  57 0024 22F08002 		bic	r2, r2, #128
  58 0028 43F8042C 		str	r2, [r3, #-4]
  25:debug_uart.c  **** 
  26:debug_uart.c  **** 	// enable auto RTS/CTS
  27:debug_uart.c  **** 	if (flow_control)
  59              		.loc 1 27 0
  60 002c 10B1     		cbz	r0, .L2
  28:debug_uart.c  **** 		U1MCR = 0b11000000;
  61              		.loc 1 28 0
  62 002e C022     		movs	r2, #192
  63 0030 1A60     		str	r2, [r3]
  64 0032 00E0     		b	.L3
  65              	.L2:
  29:debug_uart.c  **** 	else
  30:debug_uart.c  **** 		U1MCR = 0;
  66              		.loc 1 30 0
  67 0034 1860     		str	r0, [r3]
  68              	.L3:
  31:debug_uart.c  **** 
  32:debug_uart.c  **** 	// enable FIFO and DMA
  33:debug_uart.c  **** 	U1FCR = 0b1001;
  69              		.loc 1 33 0
  70 0036 1D4B     		ldr	r3, .L9+12
  71 0038 0922     		movs	r2, #9
  72 003a 1A60     		str	r2, [r3]
  34:debug_uart.c  **** 
  35:debug_uart.c  **** 	// set P0.15 as TXD1, with pullup
  36:debug_uart.c  **** 	PINSEL0  = (PINSEL0  & ~(0b11 << 30)) | (0b01 << 30);
  73              		.loc 1 36 0
  74 003c 1C4A     		ldr	r2, .L9+16
  75 003e 1368     		ldr	r3, [r2]
  37:debug_uart.c  **** 	PINMODE0 = (PINMODE0 & ~(0b11 << 30)) | (0b00 << 30);
  38:debug_uart.c  **** 
ARM GAS  /tmp/ccwwlcoZ.s 			page 3


  39:debug_uart.c  **** 	// set P0.16 as RXD1, with pullup
  40:debug_uart.c  **** 	PINSEL1  = (PINSEL1  & ~(0b11 <<  0)) | (0b01 <<  0);
  76              		.loc 1 40 0
  77 0040 0432     		adds	r2, r2, #4
  36:debug_uart.c  **** 	PINMODE0 = (PINMODE0 & ~(0b11 << 30)) | (0b00 << 30);
  78              		.loc 1 36 0
  79 0042 23F04043 		bic	r3, r3, #-1073741824
  80 0046 43F08043 		orr	r3, r3, #1073741824
  81 004a 42F8043C 		str	r3, [r2, #-4]
  37:debug_uart.c  **** 	PINMODE0 = (PINMODE0 & ~(0b11 << 30)) | (0b00 << 30);
  82              		.loc 1 37 0
  83 004e D36B     		ldr	r3, [r2, #60]
  84 0050 23F04043 		bic	r3, r3, #-1073741824
  85 0054 D363     		str	r3, [r2, #60]
  86              		.loc 1 40 0
  87 0056 1368     		ldr	r3, [r2]
  88 0058 23F00303 		bic	r3, r3, #3
  89 005c 43F00103 		orr	r3, r3, #1
  90 0060 1360     		str	r3, [r2]
  41:debug_uart.c  **** 	PINMODE1 = (PINMODE1 & ~(0b11 <<  0)) | (0b00 <<  0);
  91              		.loc 1 41 0
  92 0062 144B     		ldr	r3, .L9+20
  93 0064 1968     		ldr	r1, [r3]
  94 0066 21F00301 		bic	r1, r1, #3
  95 006a 1960     		str	r1, [r3]
  42:debug_uart.c  **** 
  43:debug_uart.c  **** 	if (flow_control) {
  96              		.loc 1 43 0
  97 006c B8B1     		cbz	r0, .L1
  44:debug_uart.c  **** 		// set P0.17 as CTS1, no pullup/down
  45:debug_uart.c  **** 		PINSEL1  = (PINSEL1  & ~(0b11 <<  2)) | (0b01 <<  2);
  98              		.loc 1 45 0
  99 006e 1168     		ldr	r1, [r2]
 100 0070 21F00C01 		bic	r1, r1, #12
 101 0074 41F00401 		orr	r1, r1, #4
 102 0078 1160     		str	r1, [r2]
  46:debug_uart.c  **** 		PINMODE1 = (PINMODE1 & ~(0b11 <<  2)) | (0b10 <<  2);
 103              		.loc 1 46 0
 104 007a 1968     		ldr	r1, [r3]
 105 007c 21F00C01 		bic	r1, r1, #12
 106 0080 41F00801 		orr	r1, r1, #8
 107 0084 1960     		str	r1, [r3]
  47:debug_uart.c  **** 
  48:debug_uart.c  **** 		// set P0.22 as RTS1, no pullup/down
  49:debug_uart.c  **** 		PINSEL1  = (PINSEL1  & ~(0b11 << 12)) | (0b01 << 12);
 108              		.loc 1 49 0
 109 0086 1168     		ldr	r1, [r2]
 110 0088 21F44051 		bic	r1, r1, #12288
 111 008c 41F48051 		orr	r1, r1, #4096
 112 0090 1160     		str	r1, [r2]
  50:debug_uart.c  **** 		PINMODE1 = (PINMODE1 & ~(0b11 << 12)) | (0b10 << 12);
 113              		.loc 1 50 0
 114 0092 1A68     		ldr	r2, [r3]
 115 0094 22F44052 		bic	r2, r2, #12288
 116 0098 42F40052 		orr	r2, r2, #8192
 117 009c 1A60     		str	r2, [r3]
 118              	.L1:
ARM GAS  /tmp/ccwwlcoZ.s 			page 4


 119 009e 7047     		bx	lr
 120              	.L10:
 121              		.align	2
 122              	.L9:
 123 00a0 C4C00F40 		.word	1074774212
 124 00a4 0C000140 		.word	1073807372
 125 00a8 00000140 		.word	1073807360
 126 00ac 08000140 		.word	1073807368
 127 00b0 00C00240 		.word	1073922048
 128 00b4 44C00240 		.word	1073922116
 129              		.cfi_endproc
 130              	.LFE0:
 132              		.section	.text.debug_write,"ax",%progbits
 133              		.align	1
 134              		.global	debug_write
 135              		.thumb
 136              		.thumb_func
 138              	debug_write:
 139              	.LFB1:
  51:debug_uart.c  **** 	}
  52:debug_uart.c  **** }
  53:debug_uart.c  **** 
  54:debug_uart.c  **** // synchronously write a string to debug UART
  55:debug_uart.c  **** // does not start any DMA
  56:debug_uart.c  **** void debug_write(const char *str) {
 140              		.loc 1 56 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL1:
 146              	.LVL2:
 147 0000 0138     		subs	r0, r0, #1
 148              	.LVL3:
 149              	.L12:
  57:debug_uart.c  **** 	unsigned i;
  58:debug_uart.c  **** 
  59:debug_uart.c  **** 	for (i = 0; str[i]; ++i) {
 150              		.loc 1 59 0 discriminator 1
 151 0002 10F8013F 		ldrb	r3, [r0, #1]!	@ zero_extendqisi2
 152              	.LVL4:
 153 0006 33B1     		cbz	r3, .L17
 154              	.L15:
  60:debug_uart.c  **** 		while ((U1LSR & U1LSR_THRE) == 0)
 155              		.loc 1 60 0 discriminator 1
 156 0008 034A     		ldr	r2, .L18
 157 000a 1268     		ldr	r2, [r2]
 158 000c 9206     		lsls	r2, r2, #26
 159 000e FBD5     		bpl	.L15
  61:debug_uart.c  **** 			;
  62:debug_uart.c  **** 		U1THR = str[i];
 160              		.loc 1 62 0 discriminator 2
 161 0010 024A     		ldr	r2, .L18+4
 162 0012 1360     		str	r3, [r2]
 163              	.LVL5:
 164 0014 F5E7     		b	.L12
 165              	.LVL6:
ARM GAS  /tmp/ccwwlcoZ.s 			page 5


 166              	.L17:
  63:debug_uart.c  **** 	}
  64:debug_uart.c  **** }
 167              		.loc 1 64 0
 168 0016 7047     		bx	lr
 169              	.L19:
 170              		.align	2
 171              	.L18:
 172 0018 14000140 		.word	1073807380
 173 001c 00000140 		.word	1073807360
 174              		.cfi_endproc
 175              	.LFE1:
 177              		.section	.text.debug_printf,"ax",%progbits
 178              		.align	1
 179              		.global	debug_printf
 180              		.thumb
 181              		.thumb_func
 183              	debug_printf:
 184              	.LFB3:
  65:debug_uart.c  **** 
  66:debug_uart.c  **** static void debug_send_dma(size_t size) {
  67:debug_uart.c  **** 	DMACC7SrcAddr = (uint32_t)debug_buffer;
  68:debug_uart.c  **** 	DMACC7DestAddr = (uint32_t)&U1THR;
  69:debug_uart.c  **** 	DMACC7LLI = 0;
  70:debug_uart.c  **** 	DMACC7Control =
  71:debug_uart.c  **** 			(size & 0xfff)   | // transfer size
  72:debug_uart.c  **** 			(0b000 << 12)    | // source burst: 1 byte
  73:debug_uart.c  **** 			(0b000 << 15)    | // dest burst: 1 byte
  74:debug_uart.c  **** 			DMACCxControl_SI | // source increment
  75:debug_uart.c  **** 			DMACCxControl_I  ; // terminal count interrupt enable
  76:debug_uart.c  **** 	DMACC7Config =
  77:debug_uart.c  **** 			(10 << 6)         | // UART1 TX
  78:debug_uart.c  **** 			(0b001 << 11)     | // memory to peripheral
  79:debug_uart.c  **** 			DMACCxConfig_IE   | // allow error interrupts
  80:debug_uart.c  **** 			DMACCxConfig_ITC  ; // allow terminal count interrupts
  81:debug_uart.c  **** 
  82:debug_uart.c  **** 	DMACC7Config |= 1;
  83:debug_uart.c  **** }
  84:debug_uart.c  **** 
  85:debug_uart.c  **** void debug_printf(char *fmt, ...) {
 185              		.loc 1 85 0
 186              		.cfi_startproc
 187              		@ args = 4, pretend = 16, frame = 8
 188              		@ frame_needed = 0, uses_anonymous_args = 1
 189              	.LVL7:
 190 0000 0FB4     		push	{r0, r1, r2, r3}
 191              		.cfi_def_cfa_offset 16
 192              		.cfi_offset 0, -16
 193              		.cfi_offset 1, -12
 194              		.cfi_offset 2, -8
 195              		.cfi_offset 3, -4
 196 0002 37B5     		push	{r0, r1, r2, r4, r5, lr}
 197              		.cfi_def_cfa_offset 40
 198              		.cfi_offset 4, -28
 199              		.cfi_offset 5, -24
 200              		.cfi_offset 14, -20
  86:debug_uart.c  **** 	va_list ap;
ARM GAS  /tmp/ccwwlcoZ.s 			page 6


  87:debug_uart.c  **** 	void *ret;
  88:debug_uart.c  **** 
  89:debug_uart.c  **** 	// TODO warn user?
  90:debug_uart.c  **** 	if (debug_dma_active)
 201              		.loc 1 90 0
 202 0004 134B     		ldr	r3, .L23
 203 0006 1D68     		ldr	r5, [r3]
 204 0008 FDB9     		cbnz	r5, .L20
  91:debug_uart.c  **** 		return;
  92:debug_uart.c  **** 	debug_dma_active = 1;
  93:debug_uart.c  **** 
  94:debug_uart.c  **** 	va_start(ap, fmt);
  95:debug_uart.c  **** 	tfp_vsnprintf(debug_buffer, sizeof(debug_buffer) - 1, fmt, ap);
 205              		.loc 1 95 0
 206 000a 134C     		ldr	r4, .L23+4
  92:debug_uart.c  **** 
 207              		.loc 1 92 0
 208 000c 0122     		movs	r2, #1
 209 000e 1A60     		str	r2, [r3]
 210              		.loc 1 95 0
 211 0010 FF21     		movs	r1, #255
  94:debug_uart.c  **** 	tfp_vsnprintf(debug_buffer, sizeof(debug_buffer) - 1, fmt, ap);
 212              		.loc 1 94 0
 213 0012 07AB     		add	r3, sp, #28
 214              		.loc 1 95 0
 215 0014 069A     		ldr	r2, [sp, #24]
 216 0016 2046     		mov	r0, r4
  94:debug_uart.c  **** 	tfp_vsnprintf(debug_buffer, sizeof(debug_buffer) - 1, fmt, ap);
 217              		.loc 1 94 0
 218 0018 0193     		str	r3, [sp, #4]
 219              		.loc 1 95 0
 220 001a FFF7FEFF 		bl	tfp_vsnprintf
 221              	.LVL8:
  96:debug_uart.c  **** 	va_end(ap);
  97:debug_uart.c  **** 	debug_buffer[sizeof(debug_buffer) - 1] = 0;
  98:debug_uart.c  **** 
  99:debug_uart.c  **** 	size_t len = strlen(debug_buffer);
 222              		.loc 1 99 0
 223 001e 2046     		mov	r0, r4
  97:debug_uart.c  **** 
 224              		.loc 1 97 0
 225 0020 84F8FF50 		strb	r5, [r4, #255]
 226              		.loc 1 99 0
 227 0024 FFF7FEFF 		bl	strlen
 228              	.LVL9:
 229              	.LBB4:
 230              	.LBB5:
  67:debug_uart.c  **** 	DMACC7DestAddr = (uint32_t)&U1THR;
 231              		.loc 1 67 0
 232 0028 0C4B     		ldr	r3, .L23+8
  68:debug_uart.c  **** 	DMACC7LLI = 0;
 233              		.loc 1 68 0
 234 002a 0D4A     		ldr	r2, .L23+12
  67:debug_uart.c  **** 	DMACC7DestAddr = (uint32_t)&U1THR;
 235              		.loc 1 67 0
 236 002c 1C60     		str	r4, [r3]
  68:debug_uart.c  **** 	DMACC7LLI = 0;
ARM GAS  /tmp/ccwwlcoZ.s 			page 7


 237              		.loc 1 68 0
 238 002e 5A60     		str	r2, [r3, #4]
  76:debug_uart.c  **** 			(10 << 6)         | // UART1 TX
 239              		.loc 1 76 0
 240 0030 4CF68022 		movw	r2, #51840
  72:debug_uart.c  **** 			(0b000 << 15)    | // dest burst: 1 byte
 241              		.loc 1 72 0
 242 0034 C0F30B00 		ubfx	r0, r0, #0, #12
 243              	.LVL10:
  74:debug_uart.c  **** 			DMACCxControl_I  ; // terminal count interrupt enable
 244              		.loc 1 74 0
 245 0038 40F00440 		orr	r0, r0, #-2080374784
  69:debug_uart.c  **** 	DMACC7Control =
 246              		.loc 1 69 0
 247 003c 9D60     		str	r5, [r3, #8]
  70:debug_uart.c  **** 			(size & 0xfff)   | // transfer size
 248              		.loc 1 70 0
 249 003e D860     		str	r0, [r3, #12]
  76:debug_uart.c  **** 			(10 << 6)         | // UART1 TX
 250              		.loc 1 76 0
 251 0040 1A61     		str	r2, [r3, #16]
  82:debug_uart.c  **** }
 252              		.loc 1 82 0
 253 0042 1A69     		ldr	r2, [r3, #16]
 254 0044 42F00102 		orr	r2, r2, #1
 255 0048 1A61     		str	r2, [r3, #16]
 256              	.L20:
 257              	.LBE5:
 258              	.LBE4:
 100:debug_uart.c  **** 	debug_send_dma(len);
 101:debug_uart.c  **** }
 259              		.loc 1 101 0
 260 004a 03B0     		add	sp, sp, #12
 261              		.cfi_def_cfa_offset 28
 262              		@ sp needed
 263 004c BDE83040 		pop	{r4, r5, lr}
 264              		.cfi_restore 14
 265              		.cfi_restore 5
 266              		.cfi_restore 4
 267              		.cfi_def_cfa_offset 16
 268 0050 04B0     		add	sp, sp, #16
 269              		.cfi_restore 3
 270              		.cfi_restore 2
 271              		.cfi_restore 1
 272              		.cfi_restore 0
 273              		.cfi_def_cfa_offset 0
 274 0052 7047     		bx	lr
 275              	.L24:
 276              		.align	2
 277              	.L23:
 278 0054 00000000 		.word	.LANCHOR0
 279 0058 00000000 		.word	debug_buffer
 280 005c E0410050 		.word	1342194144
 281 0060 00000140 		.word	1073807360
 282              		.cfi_endproc
 283              	.LFE3:
 285              		.comm	debug_buffer,256,1
ARM GAS  /tmp/ccwwlcoZ.s 			page 8


 286              		.global	debug_dma_active
 287              		.bss
 288              		.align	2
 289              		.set	.LANCHOR0,. + 0
 292              	debug_dma_active:
 293 0000 00000000 		.space	4
 294              		.text
 295              	.Letext0:
 296              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h"
 297              		.file 3 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 298              		.file 4 "<built-in>"
 299              		.file 5 "tinyprintf.h"
 300              		.file 6 "/usr/include/newlib/string.h"
ARM GAS  /tmp/ccwwlcoZ.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 debug_uart.c
     /tmp/ccwwlcoZ.s:19     .text.debug_uart_init:0000000000000000 $t
     /tmp/ccwwlcoZ.s:24     .text.debug_uart_init:0000000000000000 debug_uart_init
     /tmp/ccwwlcoZ.s:123    .text.debug_uart_init:00000000000000a0 $d
     /tmp/ccwwlcoZ.s:133    .text.debug_write:0000000000000000 $t
     /tmp/ccwwlcoZ.s:138    .text.debug_write:0000000000000000 debug_write
     /tmp/ccwwlcoZ.s:172    .text.debug_write:0000000000000018 $d
     /tmp/ccwwlcoZ.s:178    .text.debug_printf:0000000000000000 $t
     /tmp/ccwwlcoZ.s:183    .text.debug_printf:0000000000000000 debug_printf
     /tmp/ccwwlcoZ.s:278    .text.debug_printf:0000000000000054 $d
                            *COM*:0000000000000100 debug_buffer
     /tmp/ccwwlcoZ.s:292    .bss:0000000000000000 debug_dma_active
     /tmp/ccwwlcoZ.s:288    .bss:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
tfp_vsnprintf
strlen
