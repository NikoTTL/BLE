ARM GAS  /tmp/cc6Mxyx4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"tinyprintf.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_uldivmod
  19              		.section	.text.ulli2a,"ax",%progbits
  20              		.align	1
  21              		.thumb
  22              		.thumb_func
  24              	ulli2a:
  25              	.LFB0:
  26              		.file 1 "tinyprintf.c"
   1:tinyprintf.c  **** /*
   2:tinyprintf.c  **** File: tinyprintf.c
   3:tinyprintf.c  **** 
   4:tinyprintf.c  **** Copyright (C) 2004  Kustaa Nyholm
   5:tinyprintf.c  **** 
   6:tinyprintf.c  **** This library is free software; you can redistribute it and/or
   7:tinyprintf.c  **** modify it under the terms of the GNU Lesser General Public
   8:tinyprintf.c  **** License as published by the Free Software Foundation; either
   9:tinyprintf.c  **** version 2.1 of the License, or (at your option) any later version.
  10:tinyprintf.c  **** 
  11:tinyprintf.c  **** This library is distributed in the hope that it will be useful,
  12:tinyprintf.c  **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:tinyprintf.c  **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  14:tinyprintf.c  **** Lesser General Public License for more details.
  15:tinyprintf.c  **** 
  16:tinyprintf.c  **** You should have received a copy of the GNU Lesser General Public
  17:tinyprintf.c  **** License along with this library; if not, write to the Free Software
  18:tinyprintf.c  **** Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  19:tinyprintf.c  **** 
  20:tinyprintf.c  **** */
  21:tinyprintf.c  **** 
  22:tinyprintf.c  **** #include "tinyprintf.h"
  23:tinyprintf.c  **** 
  24:tinyprintf.c  **** 
  25:tinyprintf.c  **** /*
  26:tinyprintf.c  ****  * Configuration
  27:tinyprintf.c  ****  */
  28:tinyprintf.c  **** 
  29:tinyprintf.c  **** /* Enable long int support */
  30:tinyprintf.c  **** #define PRINTF_LONG_SUPPORT
  31:tinyprintf.c  **** 
  32:tinyprintf.c  **** /* Enable long long int support (implies long int support) */
ARM GAS  /tmp/cc6Mxyx4.s 			page 2


  33:tinyprintf.c  **** #define PRINTF_LONG_LONG_SUPPORT
  34:tinyprintf.c  **** 
  35:tinyprintf.c  **** /* Enable %z (size_t) support */
  36:tinyprintf.c  **** #define PRINTF_SIZE_T_SUPPORT
  37:tinyprintf.c  **** 
  38:tinyprintf.c  **** /*
  39:tinyprintf.c  ****  * Configuration adjustments
  40:tinyprintf.c  ****  */
  41:tinyprintf.c  **** #ifdef PRINTF_SIZE_T_SUPPORT
  42:tinyprintf.c  **** #include <sys/types.h>
  43:tinyprintf.c  **** #endif
  44:tinyprintf.c  **** 
  45:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
  46:tinyprintf.c  **** # define PRINTF_LONG_SUPPORT
  47:tinyprintf.c  **** #endif
  48:tinyprintf.c  **** 
  49:tinyprintf.c  **** /* __SIZEOF_<type>__ defined at least by gcc */
  50:tinyprintf.c  **** #ifdef __SIZEOF_POINTER__
  51:tinyprintf.c  **** # define SIZEOF_POINTER __SIZEOF_POINTER__
  52:tinyprintf.c  **** #endif
  53:tinyprintf.c  **** #ifdef __SIZEOF_LONG_LONG__
  54:tinyprintf.c  **** # define SIZEOF_LONG_LONG __SIZEOF_LONG_LONG__
  55:tinyprintf.c  **** #endif
  56:tinyprintf.c  **** #ifdef __SIZEOF_LONG__
  57:tinyprintf.c  **** # define SIZEOF_LONG __SIZEOF_LONG__
  58:tinyprintf.c  **** #endif
  59:tinyprintf.c  **** #ifdef __SIZEOF_INT__
  60:tinyprintf.c  **** # define SIZEOF_INT __SIZEOF_INT__
  61:tinyprintf.c  **** #endif
  62:tinyprintf.c  **** 
  63:tinyprintf.c  **** #ifdef __GNUC__
  64:tinyprintf.c  **** # define _TFP_GCC_NO_INLINE_  __attribute__ ((noinline))
  65:tinyprintf.c  **** #else
  66:tinyprintf.c  **** # define _TFP_GCC_NO_INLINE_
  67:tinyprintf.c  **** #endif
  68:tinyprintf.c  **** 
  69:tinyprintf.c  **** /*
  70:tinyprintf.c  ****  * Implementation
  71:tinyprintf.c  ****  */
  72:tinyprintf.c  **** struct param {
  73:tinyprintf.c  ****     char lz:1;          /**<  Leading zeros */
  74:tinyprintf.c  ****     char alt:1;         /**<  alternate form */
  75:tinyprintf.c  ****     char uc:1;          /**<  Upper case (for base16 only) */
  76:tinyprintf.c  ****     char align_left:1;  /**<  0 == align right (default), 1 == align left */
  77:tinyprintf.c  ****     unsigned int width; /**<  field width */
  78:tinyprintf.c  ****     char sign;          /**<  The sign to display (if any) */
  79:tinyprintf.c  ****     unsigned int base;  /**<  number base (e.g.: 8, 10, 16) */
  80:tinyprintf.c  ****     char *bf;           /**<  Buffer to output */
  81:tinyprintf.c  **** };
  82:tinyprintf.c  **** 
  83:tinyprintf.c  **** 
  84:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
  85:tinyprintf.c  **** static void _TFP_GCC_NO_INLINE_ ulli2a(
  86:tinyprintf.c  ****     unsigned long long int num, struct param *p)
  87:tinyprintf.c  **** {
  27              		.loc 1 87 0
  28              		.cfi_startproc
ARM GAS  /tmp/cc6Mxyx4.s 			page 3


  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              		.cfi_def_cfa_offset 40
  34              		.cfi_offset 3, -40
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44              	.LVL1:
  45              		.loc 1 87 0
  46 0004 8046     		mov	r8, r0
  47 0006 8946     		mov	r9, r1
  48 0008 9346     		mov	fp, r2
  88:tinyprintf.c  ****     int n = 0;
  89:tinyprintf.c  ****     unsigned long long int d = 1;
  90:tinyprintf.c  ****     char *bf = p->bf;
  49              		.loc 1 90 0
  50 000a D2F810A0 		ldr	r10, [r2, #16]
  51              	.LVL2:
  91:tinyprintf.c  ****     while (num / d >= p->base)
  52              		.loc 1 91 0
  53 000e D668     		ldr	r6, [r2, #12]
  54 0010 0027     		movs	r7, #0
  89:tinyprintf.c  ****     char *bf = p->bf;
  55              		.loc 1 89 0
  56 0012 0124     		movs	r4, #1
  57 0014 0025     		movs	r5, #0
  58              	.LVL3:
  59              	.L2:
  60              		.loc 1 91 0
  61 0016 4046     		mov	r0, r8
  62 0018 4946     		mov	r1, r9
  63 001a 2246     		mov	r2, r4
  64 001c 2B46     		mov	r3, r5
  65 001e FFF7FEFF 		bl	__aeabi_uldivmod
  66              	.LVL4:
  67 0022 B942     		cmp	r1, r7
  68 0024 08BF     		it	eq
  69 0026 B042     		cmpeq	r0, r6
  70 0028 07D3     		bcc	.L12
  92:tinyprintf.c  ****         d *= p->base;
  71              		.loc 1 92 0
  72 002a 04FB07F3 		mul	r3, r4, r7
  73 002e 06FB0533 		mla	r3, r6, r5, r3
  74 0032 A4FB0645 		umull	r4, r5, r4, r6
  75              	.LVL5:
  76 0036 1D44     		add	r5, r5, r3
  77              	.LVL6:
  78 0038 EDE7     		b	.L2
  79              	.L12:
ARM GAS  /tmp/cc6Mxyx4.s 			page 4


  91:tinyprintf.c  ****     while (num / d >= p->base)
  80              		.loc 1 91 0
  81 003a 0026     		movs	r6, #0
  82              	.LVL7:
  83              	.L4:
  93:tinyprintf.c  ****     while (d != 0) {
  84              		.loc 1 93 0
  85 003c 54EA0503 		orrs	r3, r4, r5
  86 0040 31D0     		beq	.L13
  87              	.LBB2:
  94:tinyprintf.c  ****         int dgt = num / d;
  88              		.loc 1 94 0
  89 0042 2246     		mov	r2, r4
  90 0044 2B46     		mov	r3, r5
  91 0046 4046     		mov	r0, r8
  92 0048 4946     		mov	r1, r9
  93 004a FFF7FEFF 		bl	__aeabi_uldivmod
  94              	.LVL8:
  95:tinyprintf.c  ****         num %= d;
  95              		.loc 1 95 0
  96 004e 4946     		mov	r1, r9
  97 0050 2246     		mov	r2, r4
  98 0052 2B46     		mov	r3, r5
  94:tinyprintf.c  ****         int dgt = num / d;
  99              		.loc 1 94 0
 100 0054 0746     		mov	r7, r0
 101              	.LVL9:
 102              		.loc 1 95 0
 103 0056 4046     		mov	r0, r8
 104              	.LVL10:
 105 0058 FFF7FEFF 		bl	__aeabi_uldivmod
 106              	.LVL11:
  96:tinyprintf.c  ****         d /= p->base;
 107              		.loc 1 96 0
 108 005c 2046     		mov	r0, r4
 109 005e 2946     		mov	r1, r5
  95:tinyprintf.c  ****         num %= d;
 110              		.loc 1 95 0
 111 0060 9046     		mov	r8, r2
 112              	.LVL12:
 113 0062 9946     		mov	r9, r3
 114              	.LVL13:
 115              		.loc 1 96 0
 116 0064 DBF80C20 		ldr	r2, [fp, #12]
 117 0068 0023     		movs	r3, #0
 118 006a FFF7FEFF 		bl	__aeabi_uldivmod
 119              	.LVL14:
 120 006e 0446     		mov	r4, r0
 121              	.LVL15:
 122 0070 0D46     		mov	r5, r1
 123              	.LVL16:
  97:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 124              		.loc 1 97 0
 125 0072 26B9     		cbnz	r6, .L5
 126              		.loc 1 97 0 is_stmt 0 discriminator 1
 127 0074 002F     		cmp	r7, #0
 128 0076 02DC     		bgt	.L5
ARM GAS  /tmp/cc6Mxyx4.s 			page 5


 129              		.loc 1 97 0 discriminator 2
 130 0078 54EA0503 		orrs	r3, r4, r5
 131 007c DED1     		bne	.L4
 132              	.L5:
  98:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 133              		.loc 1 98 0 is_stmt 1
 134 007e 092F     		cmp	r7, #9
 135 0080 0AF10101 		add	r1, r10, #1
 136              	.LVL17:
 137 0084 FBB2     		uxtb	r3, r7
 138 0086 07DD     		ble	.L9
 139              		.loc 1 98 0 is_stmt 0 discriminator 1
 140 0088 9BF80020 		ldrb	r2, [fp]	@ zero_extendqisi2
 141 008c 12F0040F 		tst	r2, #4
 142 0090 14BF     		ite	ne
 143 0092 3722     		movne	r2, #55
 144 0094 5722     		moveq	r2, #87
 145 0096 00E0     		b	.L7
 146              	.L9:
 147              		.loc 1 98 0
 148 0098 3022     		movs	r2, #48
 149              	.L7:
 150              		.loc 1 98 0 discriminator 8
 151 009a 1344     		add	r3, r3, r2
 152 009c 8AF80030 		strb	r3, [r10]
  99:tinyprintf.c  ****             ++n;
 153              		.loc 1 99 0 is_stmt 1 discriminator 8
 154 00a0 0136     		adds	r6, r6, #1
 155              	.LVL18:
  98:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 156              		.loc 1 98 0 discriminator 8
 157 00a2 8A46     		mov	r10, r1
 158 00a4 CAE7     		b	.L4
 159              	.LVL19:
 160              	.L13:
 161              	.LBE2:
 100:tinyprintf.c  ****         }
 101:tinyprintf.c  ****     }
 102:tinyprintf.c  ****     *bf = 0;
 162              		.loc 1 102 0
 163 00a6 0023     		movs	r3, #0
 164 00a8 8AF80030 		strb	r3, [r10]
 165 00ac BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 166              		.cfi_endproc
 167              	.LFE0:
 169              		.section	.text.uli2a,"ax",%progbits
 170              		.align	1
 171              		.thumb
 172              		.thumb_func
 174              	uli2a:
 175              	.LFB2:
 103:tinyprintf.c  **** }
 104:tinyprintf.c  **** 
 105:tinyprintf.c  **** static void lli2a(long long int num, struct param *p)
 106:tinyprintf.c  **** {
 107:tinyprintf.c  ****     if (num < 0) {
 108:tinyprintf.c  ****         num = -num;
ARM GAS  /tmp/cc6Mxyx4.s 			page 6


 109:tinyprintf.c  ****         p->sign = '-';
 110:tinyprintf.c  ****     }
 111:tinyprintf.c  ****     ulli2a(num, p);
 112:tinyprintf.c  **** }
 113:tinyprintf.c  **** #endif
 114:tinyprintf.c  **** 
 115:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 116:tinyprintf.c  **** static void uli2a(unsigned long int num, struct param *p)
 117:tinyprintf.c  **** {
 176              		.loc 1 117 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              	.LVL20:
 181 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 182              		.cfi_def_cfa_offset 20
 183              		.cfi_offset 4, -20
 184              		.cfi_offset 5, -16
 185              		.cfi_offset 6, -12
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188              	.LVL21:
 118:tinyprintf.c  ****     int n = 0;
 119:tinyprintf.c  ****     unsigned long int d = 1;
 120:tinyprintf.c  ****     char *bf = p->bf;
 189              		.loc 1 120 0
 190 0002 0A69     		ldr	r2, [r1, #16]
 191              	.LVL22:
 121:tinyprintf.c  ****     while (num / d >= p->base)
 192              		.loc 1 121 0
 193 0004 CC68     		ldr	r4, [r1, #12]
 119:tinyprintf.c  ****     char *bf = p->bf;
 194              		.loc 1 119 0
 195 0006 0123     		movs	r3, #1
 196              	.LVL23:
 197              	.L15:
 198              		.loc 1 121 0
 199 0008 B0FBF3F5 		udiv	r5, r0, r3
 200 000c A542     		cmp	r5, r4
 201 000e 01D3     		bcc	.L24
 122:tinyprintf.c  ****         d *= p->base;
 202              		.loc 1 122 0
 203 0010 6343     		muls	r3, r4, r3
 204              	.LVL24:
 205 0012 F9E7     		b	.L15
 206              	.L24:
 121:tinyprintf.c  ****     while (num / d >= p->base)
 207              		.loc 1 121 0
 208 0014 0025     		movs	r5, #0
 209              	.LVL25:
 210              	.L17:
 123:tinyprintf.c  ****     while (d != 0) {
 211              		.loc 1 123 0
 212 0016 EBB1     		cbz	r3, .L25
 213              	.LBB3:
 124:tinyprintf.c  ****         int dgt = num / d;
 214              		.loc 1 124 0
ARM GAS  /tmp/cc6Mxyx4.s 			page 7


 215 0018 B0FBF3F4 		udiv	r4, r0, r3
 216              	.LVL26:
 125:tinyprintf.c  ****         num %= d;
 126:tinyprintf.c  ****         d /= p->base;
 217              		.loc 1 126 0
 218 001c CE68     		ldr	r6, [r1, #12]
 125:tinyprintf.c  ****         num %= d;
 219              		.loc 1 125 0
 220 001e 03FB1400 		mls	r0, r3, r4, r0
 221              	.LVL27:
 222              		.loc 1 126 0
 223 0022 B3FBF6F3 		udiv	r3, r3, r6
 224              	.LVL28:
 127:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 225              		.loc 1 127 0
 226 0026 1DB9     		cbnz	r5, .L18
 227              		.loc 1 127 0 is_stmt 0 discriminator 1
 228 0028 002C     		cmp	r4, #0
 229 002a 01DC     		bgt	.L18
 230              		.loc 1 127 0 discriminator 2
 231 002c 002B     		cmp	r3, #0
 232 002e F2D1     		bne	.L17
 233              	.L18:
 128:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 234              		.loc 1 128 0 is_stmt 1
 235 0030 092C     		cmp	r4, #9
 236 0032 02F10107 		add	r7, r2, #1
 237              	.LVL29:
 238 0036 E6B2     		uxtb	r6, r4
 239 0038 06DD     		ble	.L22
 240              		.loc 1 128 0 is_stmt 0 discriminator 1
 241 003a 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 242              	.LVL30:
 243 003c 14F0040F 		tst	r4, #4
 244 0040 14BF     		ite	ne
 245 0042 3724     		movne	r4, #55
 246 0044 5724     		moveq	r4, #87
 247 0046 00E0     		b	.L20
 248              	.LVL31:
 249              	.L22:
 250              		.loc 1 128 0
 251 0048 3024     		movs	r4, #48
 252              	.LVL32:
 253              	.L20:
 254              		.loc 1 128 0 discriminator 8
 255 004a 3444     		add	r4, r4, r6
 256 004c 1470     		strb	r4, [r2]
 129:tinyprintf.c  ****             ++n;
 257              		.loc 1 129 0 is_stmt 1 discriminator 8
 258 004e 0135     		adds	r5, r5, #1
 259              	.LVL33:
 128:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 260              		.loc 1 128 0 discriminator 8
 261 0050 3A46     		mov	r2, r7
 262 0052 E0E7     		b	.L17
 263              	.LVL34:
 264              	.L25:
ARM GAS  /tmp/cc6Mxyx4.s 			page 8


 265              	.LBE3:
 130:tinyprintf.c  ****         }
 131:tinyprintf.c  ****     }
 132:tinyprintf.c  ****     *bf = 0;
 266              		.loc 1 132 0
 267 0054 1370     		strb	r3, [r2]
 268 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 269              		.cfi_endproc
 270              	.LFE2:
 272              		.section	.text.ui2a,"ax",%progbits
 273              		.align	1
 274              		.thumb
 275              		.thumb_func
 277              	ui2a:
 278              	.LFB4:
 133:tinyprintf.c  **** }
 134:tinyprintf.c  **** 
 135:tinyprintf.c  **** static void li2a(long num, struct param *p)
 136:tinyprintf.c  **** {
 137:tinyprintf.c  ****     if (num < 0) {
 138:tinyprintf.c  ****         num = -num;
 139:tinyprintf.c  ****         p->sign = '-';
 140:tinyprintf.c  ****     }
 141:tinyprintf.c  ****     uli2a(num, p);
 142:tinyprintf.c  **** }
 143:tinyprintf.c  **** #endif
 144:tinyprintf.c  **** 
 145:tinyprintf.c  **** static void ui2a(unsigned int num, struct param *p)
 146:tinyprintf.c  **** {
 279              		.loc 1 146 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283              	.LVL35:
 284 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 285              		.cfi_def_cfa_offset 20
 286              		.cfi_offset 4, -20
 287              		.cfi_offset 5, -16
 288              		.cfi_offset 6, -12
 289              		.cfi_offset 7, -8
 290              		.cfi_offset 14, -4
 291              	.LVL36:
 147:tinyprintf.c  ****     int n = 0;
 148:tinyprintf.c  ****     unsigned int d = 1;
 149:tinyprintf.c  ****     char *bf = p->bf;
 292              		.loc 1 149 0
 293 0002 0A69     		ldr	r2, [r1, #16]
 294              	.LVL37:
 150:tinyprintf.c  ****     while (num / d >= p->base)
 295              		.loc 1 150 0
 296 0004 CC68     		ldr	r4, [r1, #12]
 148:tinyprintf.c  ****     char *bf = p->bf;
 297              		.loc 1 148 0
 298 0006 0123     		movs	r3, #1
 299              	.LVL38:
 300              	.L27:
 301              		.loc 1 150 0
ARM GAS  /tmp/cc6Mxyx4.s 			page 9


 302 0008 B0FBF3F5 		udiv	r5, r0, r3
 303 000c A542     		cmp	r5, r4
 304 000e 01D3     		bcc	.L36
 151:tinyprintf.c  ****         d *= p->base;
 305              		.loc 1 151 0
 306 0010 6343     		muls	r3, r4, r3
 307              	.LVL39:
 308 0012 F9E7     		b	.L27
 309              	.L36:
 150:tinyprintf.c  ****     while (num / d >= p->base)
 310              		.loc 1 150 0
 311 0014 0025     		movs	r5, #0
 312              	.LVL40:
 313              	.L29:
 152:tinyprintf.c  ****     while (d != 0) {
 314              		.loc 1 152 0
 315 0016 EBB1     		cbz	r3, .L37
 316              	.LBB4:
 153:tinyprintf.c  ****         int dgt = num / d;
 317              		.loc 1 153 0
 318 0018 B0FBF3F4 		udiv	r4, r0, r3
 319              	.LVL41:
 154:tinyprintf.c  ****         num %= d;
 155:tinyprintf.c  ****         d /= p->base;
 320              		.loc 1 155 0
 321 001c CE68     		ldr	r6, [r1, #12]
 154:tinyprintf.c  ****         num %= d;
 322              		.loc 1 154 0
 323 001e 03FB1400 		mls	r0, r3, r4, r0
 324              	.LVL42:
 325              		.loc 1 155 0
 326 0022 B3FBF6F3 		udiv	r3, r3, r6
 327              	.LVL43:
 156:tinyprintf.c  ****         if (n || dgt > 0 || d == 0) {
 328              		.loc 1 156 0
 329 0026 1DB9     		cbnz	r5, .L30
 330              		.loc 1 156 0 is_stmt 0 discriminator 1
 331 0028 002C     		cmp	r4, #0
 332 002a 01DC     		bgt	.L30
 333              		.loc 1 156 0 discriminator 2
 334 002c 002B     		cmp	r3, #0
 335 002e F2D1     		bne	.L29
 336              	.L30:
 157:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 337              		.loc 1 157 0 is_stmt 1
 338 0030 092C     		cmp	r4, #9
 339 0032 02F10107 		add	r7, r2, #1
 340              	.LVL44:
 341 0036 E6B2     		uxtb	r6, r4
 342 0038 06DD     		ble	.L34
 343              		.loc 1 157 0 is_stmt 0 discriminator 1
 344 003a 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 345              	.LVL45:
 346 003c 14F0040F 		tst	r4, #4
 347 0040 14BF     		ite	ne
 348 0042 3724     		movne	r4, #55
 349 0044 5724     		moveq	r4, #87
ARM GAS  /tmp/cc6Mxyx4.s 			page 10


 350 0046 00E0     		b	.L32
 351              	.LVL46:
 352              	.L34:
 353              		.loc 1 157 0
 354 0048 3024     		movs	r4, #48
 355              	.LVL47:
 356              	.L32:
 357              		.loc 1 157 0 discriminator 8
 358 004a 3444     		add	r4, r4, r6
 359 004c 1470     		strb	r4, [r2]
 158:tinyprintf.c  ****             ++n;
 360              		.loc 1 158 0 is_stmt 1 discriminator 8
 361 004e 0135     		adds	r5, r5, #1
 362              	.LVL48:
 157:tinyprintf.c  ****             *bf++ = dgt + (dgt < 10 ? '0' : (p->uc ? 'A' : 'a') - 10);
 363              		.loc 1 157 0 discriminator 8
 364 0050 3A46     		mov	r2, r7
 365 0052 E0E7     		b	.L29
 366              	.LVL49:
 367              	.L37:
 368              	.LBE4:
 159:tinyprintf.c  ****         }
 160:tinyprintf.c  ****     }
 161:tinyprintf.c  ****     *bf = 0;
 369              		.loc 1 161 0
 370 0054 1370     		strb	r3, [r2]
 371 0056 F0BD     		pop	{r4, r5, r6, r7, pc}
 372              		.cfi_endproc
 373              	.LFE4:
 375              		.section	.text.putchw,"ax",%progbits
 376              		.align	1
 377              		.thumb
 378              		.thumb_func
 380              	putchw:
 381              	.LFB8:
 162:tinyprintf.c  **** }
 163:tinyprintf.c  **** 
 164:tinyprintf.c  **** static void i2a(int num, struct param *p)
 165:tinyprintf.c  **** {
 166:tinyprintf.c  ****     if (num < 0) {
 167:tinyprintf.c  ****         num = -num;
 168:tinyprintf.c  ****         p->sign = '-';
 169:tinyprintf.c  ****     }
 170:tinyprintf.c  ****     ui2a(num, p);
 171:tinyprintf.c  **** }
 172:tinyprintf.c  **** 
 173:tinyprintf.c  **** static int a2d(char ch)
 174:tinyprintf.c  **** {
 175:tinyprintf.c  ****     if (ch >= '0' && ch <= '9')
 176:tinyprintf.c  ****         return ch - '0';
 177:tinyprintf.c  ****     else if (ch >= 'a' && ch <= 'f')
 178:tinyprintf.c  ****         return ch - 'a' + 10;
 179:tinyprintf.c  ****     else if (ch >= 'A' && ch <= 'F')
 180:tinyprintf.c  ****         return ch - 'A' + 10;
 181:tinyprintf.c  ****     else
 182:tinyprintf.c  ****         return -1;
 183:tinyprintf.c  **** }
ARM GAS  /tmp/cc6Mxyx4.s 			page 11


 184:tinyprintf.c  **** 
 185:tinyprintf.c  **** static char a2u(char ch, const char **src, int base, unsigned int *nump)
 186:tinyprintf.c  **** {
 187:tinyprintf.c  ****     const char *p = *src;
 188:tinyprintf.c  ****     unsigned int num = 0;
 189:tinyprintf.c  ****     int digit;
 190:tinyprintf.c  ****     while ((digit = a2d(ch)) >= 0) {
 191:tinyprintf.c  ****         if (digit > base)
 192:tinyprintf.c  ****             break;
 193:tinyprintf.c  ****         num = num * base + digit;
 194:tinyprintf.c  ****         ch = *p++;
 195:tinyprintf.c  ****     }
 196:tinyprintf.c  ****     *src = p;
 197:tinyprintf.c  ****     *nump = num;
 198:tinyprintf.c  ****     return ch;
 199:tinyprintf.c  **** }
 200:tinyprintf.c  **** 
 201:tinyprintf.c  **** static void putchw(void *putp, putcf putf, struct param *p)
 202:tinyprintf.c  **** {
 382              		.loc 1 202 0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              	.LVL50:
 387 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 388              		.cfi_def_cfa_offset 24
 389              		.cfi_offset 4, -24
 390              		.cfi_offset 5, -20
 391              		.cfi_offset 6, -16
 392              		.cfi_offset 7, -12
 393              		.cfi_offset 8, -8
 394              		.cfi_offset 14, -4
 395              		.loc 1 202 0
 396 0004 0646     		mov	r6, r0
 397 0006 0F46     		mov	r7, r1
 398 0008 1546     		mov	r5, r2
 203:tinyprintf.c  ****     char ch;
 204:tinyprintf.c  ****     int n = p->width;
 399              		.loc 1 204 0
 400 000a 5468     		ldr	r4, [r2, #4]
 401              	.LVL51:
 205:tinyprintf.c  ****     char *bf = p->bf;
 402              		.loc 1 205 0
 403 000c 1369     		ldr	r3, [r2, #16]
 404              	.LVL52:
 405              	.L39:
 206:tinyprintf.c  **** 
 207:tinyprintf.c  ****     /* Number of filling characters */
 208:tinyprintf.c  ****     while (*bf++ && n > 0)
 406              		.loc 1 208 0
 407 000e 13F8012B 		ldrb	r2, [r3], #1	@ zero_extendqisi2
 408              	.LVL53:
 409 0012 1AB9     		cbnz	r2, .L40
 410              	.L44:
 209:tinyprintf.c  ****         n--;
 210:tinyprintf.c  ****     if (p->sign)
 411              		.loc 1 210 0
ARM GAS  /tmp/cc6Mxyx4.s 			page 12


 412 0014 2B7A     		ldrb	r3, [r5, #8]	@ zero_extendqisi2
 413              	.LVL54:
 414 0016 2BB1     		cbz	r3, .L42
 211:tinyprintf.c  ****         n--;
 415              		.loc 1 211 0
 416 0018 013C     		subs	r4, r4, #1
 417              	.LVL55:
 418 001a 03E0     		b	.L42
 419              	.LVL56:
 420              	.L40:
 208:tinyprintf.c  ****         n--;
 421              		.loc 1 208 0 discriminator 1
 422 001c 002C     		cmp	r4, #0
 423 001e F9DD     		ble	.L44
 209:tinyprintf.c  ****         n--;
 424              		.loc 1 209 0
 425 0020 013C     		subs	r4, r4, #1
 426              	.LVL57:
 427 0022 F4E7     		b	.L39
 428              	.LVL58:
 429              	.L42:
 212:tinyprintf.c  ****     if (p->alt && p->base == 16)
 430              		.loc 1 212 0
 431 0024 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 432 0026 9907     		lsls	r1, r3, #30
 433              	.LVL59:
 434 0028 08D5     		bpl	.L45
 435              		.loc 1 212 0 is_stmt 0 discriminator 1
 436 002a EA68     		ldr	r2, [r5, #12]
 437 002c 102A     		cmp	r2, #16
 438 002e 01D1     		bne	.L46
 213:tinyprintf.c  ****         n -= 2;
 439              		.loc 1 213 0 is_stmt 1
 440 0030 023C     		subs	r4, r4, #2
 441              	.LVL60:
 442 0032 03E0     		b	.L45
 443              	.L46:
 214:tinyprintf.c  ****     else if (p->alt && p->base == 8)
 444              		.loc 1 214 0 discriminator 1
 445 0034 082A     		cmp	r2, #8
 215:tinyprintf.c  ****         n--;
 446              		.loc 1 215 0 discriminator 1
 447 0036 08BF     		it	eq
 448 0038 04F1FF34 		addeq	r4, r4, #-1
 449              	.LVL61:
 450              	.L45:
 216:tinyprintf.c  **** 
 217:tinyprintf.c  ****     /* Fill with space to align to the right, before alternate or sign */
 218:tinyprintf.c  ****     if (!p->lz && !p->align_left) {
 451              		.loc 1 218 0
 452 003c 13F0090F 		tst	r3, #9
 453 0040 0ED1     		bne	.L47
 454 0042 A046     		mov	r8, r4
 455              	.LVL62:
 456              	.L48:
 219:tinyprintf.c  ****         while (n-- > 0)
 457              		.loc 1 219 0
ARM GAS  /tmp/cc6Mxyx4.s 			page 13


 458 0044 B8F1000F 		cmp	r8, #0
 459 0048 05DD     		ble	.L77
 220:tinyprintf.c  ****             putf(putp, ' ');
 460              		.loc 1 220 0
 461 004a 3046     		mov	r0, r6
 462 004c 2021     		movs	r1, #32
 463 004e B847     		blx	r7
 464              	.LVL63:
 465 0050 08F1FF38 		add	r8, r8, #-1
 466              	.LVL64:
 467 0054 F6E7     		b	.L48
 468              	.LVL65:
 469              	.L77:
 470 0056 631E     		subs	r3, r4, #1
 471 0058 002C     		cmp	r4, #0
 472 005a B4BF     		ite	lt
 473 005c 1C46     		movlt	r4, r3
 474 005e 1C1B     		subge	r4, r3, r4
 475              	.LVL66:
 476              	.L47:
 221:tinyprintf.c  ****     }
 222:tinyprintf.c  **** 
 223:tinyprintf.c  ****     /* print sign */
 224:tinyprintf.c  ****     if (p->sign)
 477              		.loc 1 224 0
 478 0060 297A     		ldrb	r1, [r5, #8]	@ zero_extendqisi2
 479 0062 09B1     		cbz	r1, .L50
 225:tinyprintf.c  ****         putf(putp, p->sign);
 480              		.loc 1 225 0
 481 0064 3046     		mov	r0, r6
 482 0066 B847     		blx	r7
 483              	.LVL67:
 484              	.L50:
 226:tinyprintf.c  **** 
 227:tinyprintf.c  ****     /* Alternate */
 228:tinyprintf.c  ****     if (p->alt && p->base == 16) {
 485              		.loc 1 228 0
 486 0068 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 487 006a 9A07     		lsls	r2, r3, #30
 488 006c 12D5     		bpl	.L51
 489              		.loc 1 228 0 is_stmt 0 discriminator 1
 490 006e EB68     		ldr	r3, [r5, #12]
 491 0070 102B     		cmp	r3, #16
 492 0072 0AD1     		bne	.L52
 229:tinyprintf.c  ****         putf(putp, '0');
 493              		.loc 1 229 0 is_stmt 1
 494 0074 3021     		movs	r1, #48
 495 0076 3046     		mov	r0, r6
 496 0078 B847     		blx	r7
 497              	.LVL68:
 230:tinyprintf.c  ****         putf(putp, (p->uc ? 'X' : 'x'));
 498              		.loc 1 230 0
 499 007a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 500 007c 3046     		mov	r0, r6
 501 007e 13F0040F 		tst	r3, #4
 502 0082 14BF     		ite	ne
 503 0084 5821     		movne	r1, #88
ARM GAS  /tmp/cc6Mxyx4.s 			page 14


 504 0086 7821     		moveq	r1, #120
 505 0088 03E0     		b	.L76
 506              	.L52:
 231:tinyprintf.c  ****     } else if (p->alt && p->base == 8) {
 507              		.loc 1 231 0 discriminator 1
 508 008a 082B     		cmp	r3, #8
 509 008c 02D1     		bne	.L51
 232:tinyprintf.c  ****         putf(putp, '0');
 510              		.loc 1 232 0
 511 008e 3046     		mov	r0, r6
 512 0090 3021     		movs	r1, #48
 513              	.LVL69:
 514              	.L76:
 515 0092 B847     		blx	r7
 516              	.LVL70:
 517              	.L51:
 233:tinyprintf.c  ****     }
 234:tinyprintf.c  **** 
 235:tinyprintf.c  ****     /* Fill with zeros, after alternate or sign */
 236:tinyprintf.c  ****     if (p->lz) {
 518              		.loc 1 236 0
 519 0094 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 520 0096 DB07     		lsls	r3, r3, #31
 521 0098 0ED5     		bpl	.L54
 522 009a A046     		mov	r8, r4
 523              	.LVL71:
 524              	.L55:
 237:tinyprintf.c  ****         while (n-- > 0)
 525              		.loc 1 237 0
 526 009c B8F1000F 		cmp	r8, #0
 527 00a0 05DD     		ble	.L78
 238:tinyprintf.c  ****             putf(putp, '0');
 528              		.loc 1 238 0
 529 00a2 3046     		mov	r0, r6
 530 00a4 3021     		movs	r1, #48
 531 00a6 B847     		blx	r7
 532              	.LVL72:
 533 00a8 08F1FF38 		add	r8, r8, #-1
 534              	.LVL73:
 535 00ac F6E7     		b	.L55
 536              	.LVL74:
 537              	.L78:
 538 00ae 631E     		subs	r3, r4, #1
 539 00b0 002C     		cmp	r4, #0
 540 00b2 B4BF     		ite	lt
 541 00b4 1C46     		movlt	r4, r3
 542 00b6 1C1B     		subge	r4, r3, r4
 543              	.LVL75:
 544              	.L54:
 239:tinyprintf.c  ****     }
 240:tinyprintf.c  **** 
 241:tinyprintf.c  ****     /* Put actual buffer */
 242:tinyprintf.c  ****     bf = p->bf;
 545              		.loc 1 242 0
 546 00b8 D5F81080 		ldr	r8, [r5, #16]
 547              	.LVL76:
 548              	.L57:
ARM GAS  /tmp/cc6Mxyx4.s 			page 15


 243:tinyprintf.c  ****     while ((ch = *bf++))
 549              		.loc 1 243 0
 550 00bc 18F8011B 		ldrb	r1, [r8], #1	@ zero_extendqisi2
 551              	.LVL77:
 552 00c0 11B1     		cbz	r1, .L79
 244:tinyprintf.c  ****         putf(putp, ch);
 553              		.loc 1 244 0
 554 00c2 3046     		mov	r0, r6
 555 00c4 B847     		blx	r7
 556              	.LVL78:
 557 00c6 F9E7     		b	.L57
 558              	.LVL79:
 559              	.L79:
 245:tinyprintf.c  **** 
 246:tinyprintf.c  ****     /* Fill with space to align to the left, after string */
 247:tinyprintf.c  ****     if (!p->lz && p->align_left) {
 560              		.loc 1 247 0
 561 00c8 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 562 00ca 03F00903 		and	r3, r3, #9
 563 00ce 082B     		cmp	r3, #8
 564 00d0 06D1     		bne	.L38
 565              	.LVL80:
 566              	.L60:
 248:tinyprintf.c  ****         while (n-- > 0)
 567              		.loc 1 248 0
 568 00d2 002C     		cmp	r4, #0
 569 00d4 04DD     		ble	.L38
 249:tinyprintf.c  ****             putf(putp, ' ');
 570              		.loc 1 249 0
 571 00d6 3046     		mov	r0, r6
 572 00d8 2021     		movs	r1, #32
 573 00da B847     		blx	r7
 574              	.LVL81:
 575 00dc 013C     		subs	r4, r4, #1
 576              	.LVL82:
 577 00de F8E7     		b	.L60
 578              	.LVL83:
 579              	.L38:
 580 00e0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 581              		.cfi_endproc
 582              	.LFE8:
 584              		.section	.text._vsnprintf_putcf,"ax",%progbits
 585              		.align	1
 586              		.thumb
 587              		.thumb_func
 589              	_vsnprintf_putcf:
 590              	.LFB12:
 250:tinyprintf.c  ****     }
 251:tinyprintf.c  **** }
 252:tinyprintf.c  **** 
 253:tinyprintf.c  **** void tfp_format(void *putp, putcf putf, const char *fmt, va_list va)
 254:tinyprintf.c  **** {
 255:tinyprintf.c  ****     struct param p;
 256:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 257:tinyprintf.c  ****     char bf[23];  /* long = 64b on some architectures */
 258:tinyprintf.c  **** #else
 259:tinyprintf.c  ****     char bf[12];  /* int = 32b on some architectures */
ARM GAS  /tmp/cc6Mxyx4.s 			page 16


 260:tinyprintf.c  **** #endif
 261:tinyprintf.c  ****     char ch;
 262:tinyprintf.c  ****     p.bf = bf;
 263:tinyprintf.c  **** 
 264:tinyprintf.c  ****     while ((ch = *(fmt++))) {
 265:tinyprintf.c  ****         if (ch != '%') {
 266:tinyprintf.c  **** 			// Ubertooth-specific hack: turn \n into \r\n
 267:tinyprintf.c  **** 			if (ch == '\n')
 268:tinyprintf.c  **** 				putf(putp, '\r');
 269:tinyprintf.c  ****             putf(putp, ch);
 270:tinyprintf.c  ****         } else {
 271:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 272:tinyprintf.c  ****             char lng = 0;  /* 1 for long, 2 for long long */
 273:tinyprintf.c  **** #endif
 274:tinyprintf.c  ****             /* Init parameter struct */
 275:tinyprintf.c  ****             p.lz = 0;
 276:tinyprintf.c  ****             p.alt = 0;
 277:tinyprintf.c  ****             p.width = 0;
 278:tinyprintf.c  ****             p.align_left = 0;
 279:tinyprintf.c  ****             p.sign = 0;
 280:tinyprintf.c  **** 
 281:tinyprintf.c  ****             /* Flags */
 282:tinyprintf.c  ****             while ((ch = *(fmt++))) {
 283:tinyprintf.c  ****                 switch (ch) {
 284:tinyprintf.c  ****                 case '-':
 285:tinyprintf.c  ****                     p.align_left = 1;
 286:tinyprintf.c  ****                     continue;
 287:tinyprintf.c  ****                 case '0':
 288:tinyprintf.c  ****                     p.lz = 1;
 289:tinyprintf.c  ****                     continue;
 290:tinyprintf.c  ****                 case '#':
 291:tinyprintf.c  ****                     p.alt = 1;
 292:tinyprintf.c  ****                     continue;
 293:tinyprintf.c  ****                 default:
 294:tinyprintf.c  ****                     break;
 295:tinyprintf.c  ****                 }
 296:tinyprintf.c  ****                 break;
 297:tinyprintf.c  ****             }
 298:tinyprintf.c  **** 
 299:tinyprintf.c  ****             /* Width */
 300:tinyprintf.c  ****             if (ch >= '0' && ch <= '9') {
 301:tinyprintf.c  ****                 ch = a2u(ch, &fmt, 10, &(p.width));
 302:tinyprintf.c  ****             }
 303:tinyprintf.c  **** 
 304:tinyprintf.c  ****             /* We accept 'x.y' format but don't support it completely:
 305:tinyprintf.c  ****              * we ignore the 'y' digit => this ignores 0-fill
 306:tinyprintf.c  ****              * size and makes it == width (ie. 'x') */
 307:tinyprintf.c  ****             if (ch == '.') {
 308:tinyprintf.c  ****               p.lz = 1;  /* zero-padding */
 309:tinyprintf.c  ****               /* ignore actual 0-fill size: */
 310:tinyprintf.c  ****               do {
 311:tinyprintf.c  ****                 ch = *(fmt++);
 312:tinyprintf.c  ****               } while ((ch >= '0') && (ch <= '9'));
 313:tinyprintf.c  ****             }
 314:tinyprintf.c  **** 
 315:tinyprintf.c  **** #ifdef PRINTF_SIZE_T_SUPPORT
 316:tinyprintf.c  **** # ifdef PRINTF_LONG_SUPPORT
ARM GAS  /tmp/cc6Mxyx4.s 			page 17


 317:tinyprintf.c  ****             if (ch == 'z') {
 318:tinyprintf.c  ****                 ch = *(fmt++);
 319:tinyprintf.c  ****                 if (sizeof(size_t) == sizeof(unsigned long int))
 320:tinyprintf.c  ****                     lng = 1;
 321:tinyprintf.c  **** #  ifdef PRINTF_LONG_LONG_SUPPORT
 322:tinyprintf.c  ****                 else if (sizeof(size_t) == sizeof(unsigned long long int))
 323:tinyprintf.c  ****                     lng = 2;
 324:tinyprintf.c  **** #  endif
 325:tinyprintf.c  ****             } else
 326:tinyprintf.c  **** # endif
 327:tinyprintf.c  **** #endif
 328:tinyprintf.c  **** 
 329:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 330:tinyprintf.c  ****             if (ch == 'l') {
 331:tinyprintf.c  ****                 ch = *(fmt++);
 332:tinyprintf.c  ****                 lng = 1;
 333:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
 334:tinyprintf.c  ****                 if (ch == 'l') {
 335:tinyprintf.c  ****                   ch = *(fmt++);
 336:tinyprintf.c  ****                   lng = 2;
 337:tinyprintf.c  ****                 }
 338:tinyprintf.c  **** #endif
 339:tinyprintf.c  ****             }
 340:tinyprintf.c  **** #endif
 341:tinyprintf.c  ****             switch (ch) {
 342:tinyprintf.c  ****             case 0:
 343:tinyprintf.c  ****                 goto abort;
 344:tinyprintf.c  ****             case 'u':
 345:tinyprintf.c  ****                 p.base = 10;
 346:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 347:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
 348:tinyprintf.c  ****                 if (2 == lng)
 349:tinyprintf.c  ****                     ulli2a(va_arg(va, unsigned long long int), &p);
 350:tinyprintf.c  ****                 else
 351:tinyprintf.c  **** #endif
 352:tinyprintf.c  ****                   if (1 == lng)
 353:tinyprintf.c  ****                     uli2a(va_arg(va, unsigned long int), &p);
 354:tinyprintf.c  ****                 else
 355:tinyprintf.c  **** #endif
 356:tinyprintf.c  ****                     ui2a(va_arg(va, unsigned int), &p);
 357:tinyprintf.c  ****                 putchw(putp, putf, &p);
 358:tinyprintf.c  ****                 break;
 359:tinyprintf.c  ****             case 'd':
 360:tinyprintf.c  ****             case 'i':
 361:tinyprintf.c  ****                 p.base = 10;
 362:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 363:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
 364:tinyprintf.c  ****                 if (2 == lng)
 365:tinyprintf.c  ****                     lli2a(va_arg(va, long long int), &p);
 366:tinyprintf.c  ****                 else
 367:tinyprintf.c  **** #endif
 368:tinyprintf.c  ****                   if (1 == lng)
 369:tinyprintf.c  ****                     li2a(va_arg(va, long int), &p);
 370:tinyprintf.c  ****                 else
 371:tinyprintf.c  **** #endif
 372:tinyprintf.c  ****                     i2a(va_arg(va, int), &p);
 373:tinyprintf.c  ****                 putchw(putp, putf, &p);
ARM GAS  /tmp/cc6Mxyx4.s 			page 18


 374:tinyprintf.c  ****                 break;
 375:tinyprintf.c  **** #ifdef SIZEOF_POINTER
 376:tinyprintf.c  ****             case 'p':
 377:tinyprintf.c  ****                 p.alt = 1;
 378:tinyprintf.c  **** # if defined(SIZEOF_INT) && SIZEOF_POINTER <= SIZEOF_INT
 379:tinyprintf.c  ****                 lng = 0;
 380:tinyprintf.c  **** # elif defined(SIZEOF_LONG) && SIZEOF_POINTER <= SIZEOF_LONG
 381:tinyprintf.c  ****                 lng = 1;
 382:tinyprintf.c  **** # elif defined(SIZEOF_LONG_LONG) && SIZEOF_POINTER <= SIZEOF_LONG_LONG
 383:tinyprintf.c  ****                 lng = 2;
 384:tinyprintf.c  **** # endif
 385:tinyprintf.c  **** #endif
 386:tinyprintf.c  ****             case 'x':
 387:tinyprintf.c  ****             case 'X':
 388:tinyprintf.c  ****                 p.base = 16;
 389:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 390:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 391:tinyprintf.c  **** #ifdef PRINTF_LONG_LONG_SUPPORT
 392:tinyprintf.c  ****                 if (2 == lng)
 393:tinyprintf.c  ****                     ulli2a(va_arg(va, unsigned long long int), &p);
 394:tinyprintf.c  ****                 else
 395:tinyprintf.c  **** #endif
 396:tinyprintf.c  ****                   if (1 == lng)
 397:tinyprintf.c  ****                     uli2a(va_arg(va, unsigned long int), &p);
 398:tinyprintf.c  ****                 else
 399:tinyprintf.c  **** #endif
 400:tinyprintf.c  ****                     ui2a(va_arg(va, unsigned int), &p);
 401:tinyprintf.c  ****                 putchw(putp, putf, &p);
 402:tinyprintf.c  ****                 break;
 403:tinyprintf.c  ****             case 'o':
 404:tinyprintf.c  ****                 p.base = 8;
 405:tinyprintf.c  ****                 ui2a(va_arg(va, unsigned int), &p);
 406:tinyprintf.c  ****                 putchw(putp, putf, &p);
 407:tinyprintf.c  ****                 break;
 408:tinyprintf.c  ****             case 'c':
 409:tinyprintf.c  ****                 putf(putp, (char)(va_arg(va, int)));
 410:tinyprintf.c  ****                 break;
 411:tinyprintf.c  ****             case 's':
 412:tinyprintf.c  ****                 p.bf = va_arg(va, char *);
 413:tinyprintf.c  ****                 putchw(putp, putf, &p);
 414:tinyprintf.c  ****                 p.bf = bf;
 415:tinyprintf.c  ****                 break;
 416:tinyprintf.c  ****             case '%':
 417:tinyprintf.c  ****                 putf(putp, ch);
 418:tinyprintf.c  ****             default:
 419:tinyprintf.c  ****                 break;
 420:tinyprintf.c  ****             }
 421:tinyprintf.c  ****         }
 422:tinyprintf.c  ****     }
 423:tinyprintf.c  ****  abort:;
 424:tinyprintf.c  **** }
 425:tinyprintf.c  **** 
 426:tinyprintf.c  **** #if TINYPRINTF_DEFINE_TFP_PRINTF
 427:tinyprintf.c  **** static putcf stdout_putf;
 428:tinyprintf.c  **** static void *stdout_putp;
 429:tinyprintf.c  **** 
 430:tinyprintf.c  **** void init_printf(void *putp, putcf putf)
ARM GAS  /tmp/cc6Mxyx4.s 			page 19


 431:tinyprintf.c  **** {
 432:tinyprintf.c  ****     stdout_putf = putf;
 433:tinyprintf.c  ****     stdout_putp = putp;
 434:tinyprintf.c  **** }
 435:tinyprintf.c  **** 
 436:tinyprintf.c  **** void tfp_printf(char *fmt, ...)
 437:tinyprintf.c  **** {
 438:tinyprintf.c  ****     va_list va;
 439:tinyprintf.c  ****     va_start(va, fmt);
 440:tinyprintf.c  ****     tfp_format(stdout_putp, stdout_putf, fmt, va);
 441:tinyprintf.c  ****     va_end(va);
 442:tinyprintf.c  **** }
 443:tinyprintf.c  **** #endif
 444:tinyprintf.c  **** 
 445:tinyprintf.c  **** #if TINYPRINTF_DEFINE_TFP_SPRINTF
 446:tinyprintf.c  **** struct _vsnprintf_putcf_data
 447:tinyprintf.c  **** {
 448:tinyprintf.c  ****   size_t dest_capacity;
 449:tinyprintf.c  ****   char *dest;
 450:tinyprintf.c  ****   size_t num_chars;
 451:tinyprintf.c  **** };
 452:tinyprintf.c  **** 
 453:tinyprintf.c  **** static void _vsnprintf_putcf(void *p, char c)
 454:tinyprintf.c  **** {
 591              		.loc 1 454 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596              	.LVL84:
 597              	.LVL85:
 455:tinyprintf.c  ****   struct _vsnprintf_putcf_data *data = (struct _vsnprintf_putcf_data*)p;
 456:tinyprintf.c  ****   if (data->num_chars < data->dest_capacity)
 598              		.loc 1 456 0
 599 0000 8368     		ldr	r3, [r0, #8]
 600 0002 0268     		ldr	r2, [r0]
 601 0004 9342     		cmp	r3, r2
 457:tinyprintf.c  ****     data->dest[data->num_chars] = c;
 602              		.loc 1 457 0
 603 0006 3CBF     		itt	cc
 604 0008 4268     		ldrcc	r2, [r0, #4]
 605 000a D154     		strbcc	r1, [r2, r3]
 458:tinyprintf.c  ****   data->num_chars ++;
 606              		.loc 1 458 0
 607 000c 8368     		ldr	r3, [r0, #8]
 608 000e 0133     		adds	r3, r3, #1
 609 0010 8360     		str	r3, [r0, #8]
 610 0012 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE12:
 614              		.section	.text._vsprintf_putcf,"ax",%progbits
 615              		.align	1
 616              		.thumb
 617              		.thumb_func
 619              	_vsprintf_putcf:
 620              	.LFB15:
 459:tinyprintf.c  **** }
ARM GAS  /tmp/cc6Mxyx4.s 			page 20


 460:tinyprintf.c  **** 
 461:tinyprintf.c  **** int tfp_vsnprintf(char *str, size_t size, const char *format, va_list ap)
 462:tinyprintf.c  **** {
 463:tinyprintf.c  ****   struct _vsnprintf_putcf_data data;
 464:tinyprintf.c  **** 
 465:tinyprintf.c  ****   if (size < 1)
 466:tinyprintf.c  ****     return 0;
 467:tinyprintf.c  **** 
 468:tinyprintf.c  ****   data.dest = str;
 469:tinyprintf.c  ****   data.dest_capacity = size-1;
 470:tinyprintf.c  ****   data.num_chars = 0;
 471:tinyprintf.c  ****   tfp_format(&data, _vsnprintf_putcf, format, ap);
 472:tinyprintf.c  **** 
 473:tinyprintf.c  ****   if (data.num_chars < data.dest_capacity)
 474:tinyprintf.c  ****     data.dest[data.num_chars] = '\0';
 475:tinyprintf.c  ****   else
 476:tinyprintf.c  ****     data.dest[data.dest_capacity] = '\0';
 477:tinyprintf.c  **** 
 478:tinyprintf.c  ****   return data.num_chars;
 479:tinyprintf.c  **** }
 480:tinyprintf.c  **** 
 481:tinyprintf.c  **** int tfp_snprintf(char *str, size_t size, const char *format, ...)
 482:tinyprintf.c  **** {
 483:tinyprintf.c  ****   va_list ap;
 484:tinyprintf.c  ****   int retval;
 485:tinyprintf.c  **** 
 486:tinyprintf.c  ****   va_start(ap, format);
 487:tinyprintf.c  ****   retval = tfp_vsnprintf(str, size, format, ap);
 488:tinyprintf.c  ****   va_end(ap);
 489:tinyprintf.c  ****   return retval;
 490:tinyprintf.c  **** }
 491:tinyprintf.c  **** 
 492:tinyprintf.c  **** struct _vsprintf_putcf_data
 493:tinyprintf.c  **** {
 494:tinyprintf.c  ****   char *dest;
 495:tinyprintf.c  ****   size_t num_chars;
 496:tinyprintf.c  **** };
 497:tinyprintf.c  **** 
 498:tinyprintf.c  **** static void _vsprintf_putcf(void *p, char c)
 499:tinyprintf.c  **** {
 621              		.loc 1 499 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              	.LVL86:
 626 0000 10B5     		push	{r4, lr}
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 4, -8
 629              		.cfi_offset 14, -4
 630              	.LVL87:
 500:tinyprintf.c  ****   struct _vsprintf_putcf_data *data = (struct _vsprintf_putcf_data*)p;
 501:tinyprintf.c  ****   data->dest[data->num_chars++] = c;
 631              		.loc 1 501 0
 632 0002 90E80C00 		ldmia	r0, {r2, r3}
 633 0006 5C1C     		adds	r4, r3, #1
 634 0008 4460     		str	r4, [r0, #4]
 635 000a D154     		strb	r1, [r2, r3]
ARM GAS  /tmp/cc6Mxyx4.s 			page 21


 636 000c 10BD     		pop	{r4, pc}
 637              		.cfi_endproc
 638              	.LFE15:
 640              		.section	.text.tfp_format,"ax",%progbits
 641              		.align	1
 642              		.global	tfp_format
 643              		.thumb
 644              		.thumb_func
 646              	tfp_format:
 647              	.LFB9:
 254:tinyprintf.c  ****     struct param p;
 648              		.loc 1 254 0
 649              		.cfi_startproc
 650              		@ args = 0, pretend = 0, frame = 48
 651              		@ frame_needed = 0, uses_anonymous_args = 0
 652              	.LVL88:
 653 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 654              		.cfi_def_cfa_offset 28
 655              		.cfi_offset 4, -28
 656              		.cfi_offset 5, -24
 657              		.cfi_offset 6, -20
 658              		.cfi_offset 7, -16
 659              		.cfi_offset 8, -12
 660              		.cfi_offset 9, -8
 661              		.cfi_offset 14, -4
 662 0004 8DB0     		sub	sp, sp, #52
 663              		.cfi_def_cfa_offset 80
 254:tinyprintf.c  ****     struct param p;
 664              		.loc 1 254 0
 665 0006 0746     		mov	r7, r0
 666 0008 8846     		mov	r8, r1
 667 000a 1C46     		mov	r4, r3
 262:tinyprintf.c  **** 
 668              		.loc 1 262 0
 669 000c 06AE     		add	r6, sp, #24
 670 000e 0596     		str	r6, [sp, #20]
 671              	.LVL89:
 672              	.L84:
 264:tinyprintf.c  ****         if (ch != '%') {
 673              		.loc 1 264 0
 674 0010 92F80090 		ldrb	r9, [r2]	@ zero_extendqisi2
 675 0014 551C     		adds	r5, r2, #1
 676              	.LVL90:
 677 0016 B9F1000F 		cmp	r9, #0
 678 001a 00F09381 		beq	.L83
 265:tinyprintf.c  **** 			// Ubertooth-specific hack: turn \n into \r\n
 679              		.loc 1 265 0
 680 001e B9F1250F 		cmp	r9, #37
 681 0022 08D0     		beq	.L85
 267:tinyprintf.c  **** 				putf(putp, '\r');
 682              		.loc 1 267 0
 683 0024 B9F10A0F 		cmp	r9, #10
 684 0028 02D1     		bne	.L86
 268:tinyprintf.c  ****             putf(putp, ch);
 685              		.loc 1 268 0
 686 002a 3846     		mov	r0, r7
 687 002c 0D21     		movs	r1, #13
ARM GAS  /tmp/cc6Mxyx4.s 			page 22


 688 002e C047     		blx	r8
 689              	.LVL91:
 690              	.L86:
 269:tinyprintf.c  ****         } else {
 691              		.loc 1 269 0
 692 0030 3846     		mov	r0, r7
 693 0032 4946     		mov	r1, r9
 694 0034 3BE1     		b	.L237
 695              	.L85:
 696              	.LVL92:
 697              	.LBB16:
 275:tinyprintf.c  ****             p.alt = 0;
 698              		.loc 1 275 0
 699 0036 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 277:tinyprintf.c  ****             p.align_left = 0;
 700              		.loc 1 277 0
 701 003a 0023     		movs	r3, #0
 702              	.LVL93:
 278:tinyprintf.c  ****             p.sign = 0;
 703              		.loc 1 278 0
 704 003c 02F0FC02 		and	r2, r2, #252
 705 0040 63F3C302 		bfi	r2, r3, #3, #1
 706 0044 8DF80420 		strb	r2, [sp, #4]
 707 0048 D2B2     		uxtb	r2, r2
 708 004a C2F3C00E 		ubfx	lr, r2, #3, #1
 709 004e 02F00100 		and	r0, r2, #1
 277:tinyprintf.c  ****             p.align_left = 0;
 710              		.loc 1 277 0
 711 0052 0293     		str	r3, [sp, #8]
 279:tinyprintf.c  **** 
 712              		.loc 1 279 0
 713 0054 8DF80C30 		strb	r3, [sp, #12]
 714 0058 C2F34002 		ubfx	r2, r2, #1, #1
 715              	.LVL94:
 716              	.L88:
 282:tinyprintf.c  ****                 switch (ch) {
 717              		.loc 1 282 0
 718 005c 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
 719              	.LVL95:
 720 0060 63B1     		cbz	r3, .L230
 283:tinyprintf.c  ****                 case '-':
 721              		.loc 1 283 0
 722 0062 2D2B     		cmp	r3, #45
 723 0064 05D0     		beq	.L90
 724 0066 302B     		cmp	r3, #48
 725 0068 06D0     		beq	.L140
 726 006a 232B     		cmp	r3, #35
 727 006c 06D1     		bne	.L230
 291:tinyprintf.c  ****                     continue;
 728              		.loc 1 291 0
 729 006e 0122     		movs	r2, #1
 292:tinyprintf.c  ****                 default:
 730              		.loc 1 292 0
 731 0070 F4E7     		b	.L88
 732              	.L90:
 285:tinyprintf.c  ****                     continue;
 733              		.loc 1 285 0
ARM GAS  /tmp/cc6Mxyx4.s 			page 23


 734 0072 4FF0010E 		mov	lr, #1
 735 0076 F1E7     		b	.L88
 736              	.L140:
 288:tinyprintf.c  ****                     continue;
 737              		.loc 1 288 0
 738 0078 0120     		movs	r0, #1
 739 007a EFE7     		b	.L88
 740              	.L230:
 741 007c 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 742 0080 6EF3C301 		bfi	r1, lr, #3, #1
 743 0084 60F30001 		bfi	r1, r0, #0, #1
 744 0088 62F34101 		bfi	r1, r2, #1, #1
 300:tinyprintf.c  ****                 ch = a2u(ch, &fmt, 10, &(p.width));
 745              		.loc 1 300 0
 746 008c A3F13002 		sub	r2, r3, #48
 747 0090 092A     		cmp	r2, #9
 748 0092 8DF80410 		strb	r1, [sp, #4]
 749 0096 1BD8     		bhi	.L95
 750 0098 0021     		movs	r1, #0
 751              	.LVL96:
 752              	.L96:
 753              	.LBB17:
 754              	.LBB18:
 755              	.LBB19:
 756              	.LBB20:
 175:tinyprintf.c  ****         return ch - '0';
 757              		.loc 1 175 0
 758 009a A3F13002 		sub	r2, r3, #48
 759 009e D0B2     		uxtb	r0, r2
 760 00a0 0928     		cmp	r0, #9
 761 00a2 05D8     		bhi	.L244
 762              	.L98:
 763              	.LBE20:
 764              	.LBE19:
 193:tinyprintf.c  ****         ch = *p++;
 765              		.loc 1 193 0
 766 00a4 0A23     		movs	r3, #10
 767              	.LVL97:
 768 00a6 03FB0121 		mla	r1, r3, r1, r2
 769              	.LVL98:
 194:tinyprintf.c  ****     }
 770              		.loc 1 194 0
 771 00aa 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
 772              	.LVL99:
 773 00ae F4E7     		b	.L96
 774              	.LVL100:
 775              	.L244:
 776              	.LBB22:
 777              	.LBB21:
 177:tinyprintf.c  ****         return ch - 'a' + 10;
 778              		.loc 1 177 0
 779 00b0 A3F16102 		sub	r2, r3, #97
 780 00b4 052A     		cmp	r2, #5
 781 00b6 02D8     		bhi	.L99
 178:tinyprintf.c  ****     else if (ch >= 'A' && ch <= 'F')
 782              		.loc 1 178 0
 783 00b8 A3F15702 		sub	r2, r3, #87
ARM GAS  /tmp/cc6Mxyx4.s 			page 24


 784 00bc 05E0     		b	.L100
 785              	.L99:
 179:tinyprintf.c  ****         return ch - 'A' + 10;
 786              		.loc 1 179 0
 787 00be A3F14102 		sub	r2, r3, #65
 788 00c2 052A     		cmp	r2, #5
 789 00c4 03D8     		bhi	.L101
 180:tinyprintf.c  ****     else
 790              		.loc 1 180 0
 791 00c6 A3F13702 		sub	r2, r3, #55
 792              	.L112:
 793              	.L100:
 794              	.LBE21:
 795              	.LBE22:
 191:tinyprintf.c  ****             break;
 796              		.loc 1 191 0
 797 00ca 0A2A     		cmp	r2, #10
 798 00cc EADD     		ble	.L98
 799              	.L101:
 800              	.LVL101:
 197:tinyprintf.c  ****     return ch;
 801              		.loc 1 197 0
 802 00ce 0291     		str	r1, [sp, #8]
 803              	.LVL102:
 804              	.L95:
 805              	.LBE18:
 806              	.LBE17:
 307:tinyprintf.c  ****               p.lz = 1;  /* zero-padding */
 807              		.loc 1 307 0
 808 00d0 2E2B     		cmp	r3, #46
 809 00d2 0BD1     		bne	.L102
 308:tinyprintf.c  ****               /* ignore actual 0-fill size: */
 810              		.loc 1 308 0
 811 00d4 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 812              	.LVL103:
 813 00d8 43F00103 		orr	r3, r3, #1
 814 00dc 8DF80430 		strb	r3, [sp, #4]
 815              	.LVL104:
 816              	.L103:
 311:tinyprintf.c  ****               } while ((ch >= '0') && (ch <= '9'));
 817              		.loc 1 311 0 discriminator 1
 818 00e0 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
 819              	.LVL105:
 312:tinyprintf.c  ****             }
 820              		.loc 1 312 0 discriminator 1
 821 00e4 A3F13002 		sub	r2, r3, #48
 822 00e8 092A     		cmp	r2, #9
 823 00ea F9D9     		bls	.L103
 824              	.LVL106:
 825              	.L102:
 317:tinyprintf.c  ****                 ch = *(fmt++);
 826              		.loc 1 317 0
 827 00ec 7A2B     		cmp	r3, #122
 828 00ee 01D1     		bne	.L104
 829              	.LVL107:
 318:tinyprintf.c  ****                 if (sizeof(size_t) == sizeof(unsigned long int))
 830              		.loc 1 318 0
ARM GAS  /tmp/cc6Mxyx4.s 			page 25


 831 00f0 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 832              	.LVL108:
 833 00f2 32E0     		b	.L107
 834              	.LVL109:
 835              	.L104:
 330:tinyprintf.c  ****                 ch = *(fmt++);
 836              		.loc 1 330 0
 837 00f4 6C2B     		cmp	r3, #108
 838 00f6 40F08B80 		bne	.L106
 839              	.LVL110:
 331:tinyprintf.c  ****                 lng = 1;
 840              		.loc 1 331 0
 841 00fa 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 842              	.LVL111:
 334:tinyprintf.c  ****                   ch = *(fmt++);
 843              		.loc 1 334 0
 844 00fc 6C2B     		cmp	r3, #108
 845 00fe 2CD1     		bne	.L107
 335:tinyprintf.c  ****                   lng = 2;
 846              		.loc 1 335 0
 847 0100 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 848              	.LVL112:
 849 0102 05F10209 		add	r9, r5, #2
 850              	.LVL113:
 341:tinyprintf.c  ****             case 0:
 851              		.loc 1 341 0
 852 0106 692B     		cmp	r3, #105
 853 0108 47D0     		beq	.L144
 854 010a 11D8     		bhi	.L109
 855 010c 582B     		cmp	r3, #88
 856 010e 00F0D380 		beq	.L110
 857 0112 07D8     		bhi	.L111
 858 0114 002B     		cmp	r3, #0
 859 0116 00F01581 		beq	.L83
 860 011a 252B     		cmp	r3, #37
 861 011c 40F0C980 		bne	.L141
 335:tinyprintf.c  ****                   lng = 2;
 862              		.loc 1 335 0
 863 0120 4D46     		mov	r5, r9
 864 0122 C2E0     		b	.L113
 865              	.L111:
 341:tinyprintf.c  ****             case 0:
 866              		.loc 1 341 0
 867 0124 632B     		cmp	r3, #99
 868 0126 00F0A580 		beq	.L143
 869 012a 642B     		cmp	r3, #100
 870 012c 35D0     		beq	.L144
 871 012e C0E0     		b	.L141
 872              	.L109:
 873 0130 732B     		cmp	r3, #115
 874 0132 00F0A680 		beq	.L147
 875 0136 07D8     		bhi	.L116
 876 0138 6F2B     		cmp	r3, #111
 877 013a 00F08C80 		beq	.L145
 878 013e 702B     		cmp	r3, #112
 879 0140 40F0B780 		bne	.L141
 335:tinyprintf.c  ****                   lng = 2;
ARM GAS  /tmp/cc6Mxyx4.s 			page 26


 880              		.loc 1 335 0
 881 0144 4D46     		mov	r5, r9
 882 0146 6FE0     		b	.L118
 883              	.L116:
 341:tinyprintf.c  ****             case 0:
 884              		.loc 1 341 0
 885 0148 752B     		cmp	r3, #117
 886 014a 03D0     		beq	.L148
 887 014c 782B     		cmp	r3, #120
 888 014e 00F0B380 		beq	.L110
 889 0152 AEE0     		b	.L141
 890              	.L148:
 335:tinyprintf.c  ****                   lng = 2;
 891              		.loc 1 335 0
 892 0154 4D46     		mov	r5, r9
 336:tinyprintf.c  ****                 }
 893              		.loc 1 336 0
 894 0156 0223     		movs	r3, #2
 895              	.LVL114:
 896 0158 0CE0     		b	.L119
 897              	.LVL115:
 898              	.L107:
 341:tinyprintf.c  ****             case 0:
 899              		.loc 1 341 0
 900 015a 692B     		cmp	r3, #105
 331:tinyprintf.c  ****                 lng = 1;
 901              		.loc 1 331 0
 902 015c 05F10105 		add	r5, r5, #1
 903              	.LVL116:
 341:tinyprintf.c  ****             case 0:
 904              		.loc 1 341 0
 905 0160 27D0     		beq	.L149
 906 0162 1DD9     		bls	.L245
 907 0164 732B     		cmp	r3, #115
 908 0166 00F08D80 		beq	.L115
 909 016a 59D9     		bls	.L235
 910 016c 752B     		cmp	r3, #117
 911 016e 40F0BB80 		bne	.L246
 912 0172 0123     		movs	r3, #1
 913              	.LVL117:
 914              	.L119:
 345:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 915              		.loc 1 345 0
 916 0174 0A22     		movs	r2, #10
 348:tinyprintf.c  ****                     ulli2a(va_arg(va, unsigned long long int), &p);
 917              		.loc 1 348 0
 918 0176 022B     		cmp	r3, #2
 345:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 919              		.loc 1 345 0
 920 0178 0492     		str	r2, [sp, #16]
 348:tinyprintf.c  ****                     ulli2a(va_arg(va, unsigned long long int), &p);
 921              		.loc 1 348 0
 922 017a 07D1     		bne	.L120
 349:tinyprintf.c  ****                 else
 923              		.loc 1 349 0
 924 017c E31D     		adds	r3, r4, #7
 925 017e 23F00703 		bic	r3, r3, #7
ARM GAS  /tmp/cc6Mxyx4.s 			page 27


 926 0182 03F10804 		add	r4, r3, #8
 927 0186 D3E90001 		ldrd	r0, [r3]
 928 018a 29E0     		b	.L124
 929              	.L120:
 352:tinyprintf.c  ****                     uli2a(va_arg(va, unsigned long int), &p);
 930              		.loc 1 352 0
 931 018c 012B     		cmp	r3, #1
 353:tinyprintf.c  ****                 else
 932              		.loc 1 353 0
 933 018e 2068     		ldr	r0, [r4]
 934 0190 01A9     		add	r1, sp, #4
 935 0192 04F10409 		add	r9, r4, #4
 352:tinyprintf.c  ****                     uli2a(va_arg(va, unsigned long int), &p);
 936              		.loc 1 352 0
 937 0196 55D1     		bne	.L243
 938 0198 B8E0     		b	.L242
 939              	.LVL118:
 940              	.L144:
 335:tinyprintf.c  ****                   lng = 2;
 941              		.loc 1 335 0
 942 019a 4D46     		mov	r5, r9
 336:tinyprintf.c  ****                 }
 943              		.loc 1 336 0
 944 019c 0223     		movs	r3, #2
 945              	.LVL119:
 946 019e 09E0     		b	.L108
 947              	.LVL120:
 948              	.L245:
 341:tinyprintf.c  ****             case 0:
 949              		.loc 1 341 0
 950 01a0 582B     		cmp	r3, #88
 951 01a2 00F0A380 		beq	.L131
 952 01a6 7CD9     		bls	.L240
 953 01a8 632B     		cmp	r3, #99
 954 01aa 64D0     		beq	.L114
 955 01ac 642B     		cmp	r3, #100
 956 01ae 40F08180 		bne	.L87
 957              	.L149:
 958 01b2 0123     		movs	r3, #1
 959              	.LVL121:
 960              	.L108:
 361:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 961              		.loc 1 361 0
 962 01b4 0A22     		movs	r2, #10
 364:tinyprintf.c  ****                     lli2a(va_arg(va, long long int), &p);
 963              		.loc 1 364 0
 964 01b6 022B     		cmp	r3, #2
 361:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 965              		.loc 1 361 0
 966 01b8 0492     		str	r2, [sp, #16]
 364:tinyprintf.c  ****                     lli2a(va_arg(va, long long int), &p);
 967              		.loc 1 364 0
 968 01ba 15D1     		bne	.L123
 365:tinyprintf.c  ****                 else
 969              		.loc 1 365 0
 970 01bc E31D     		adds	r3, r4, #7
 971 01be 23F00703 		bic	r3, r3, #7
ARM GAS  /tmp/cc6Mxyx4.s 			page 28


 972 01c2 D3E90001 		ldrd	r0, [r3]
 973              	.LBB23:
 974              	.LBB24:
 107:tinyprintf.c  ****         num = -num;
 975              		.loc 1 107 0
 976 01c6 0028     		cmp	r0, #0
 977              	.LBE24:
 978              	.LBE23:
 365:tinyprintf.c  ****                 else
 979              		.loc 1 365 0
 980 01c8 03F10804 		add	r4, r3, #8
 981              	.LVL122:
 982              	.LBB26:
 983              	.LBB25:
 107:tinyprintf.c  ****         num = -num;
 984              		.loc 1 107 0
 985 01cc 71F10003 		sbcs	r3, r1, #0
 986 01d0 06DA     		bge	.L124
 108:tinyprintf.c  ****         p->sign = '-';
 987              		.loc 1 108 0
 988 01d2 4042     		rsbs	r0, r0, #0
 989              	.LVL123:
 109:tinyprintf.c  ****     }
 990              		.loc 1 109 0
 991 01d4 4FF02D03 		mov	r3, #45
 108:tinyprintf.c  ****         p->sign = '-';
 992              		.loc 1 108 0
 993 01d8 61EB4101 		sbc	r1, r1, r1, lsl #1
 994              	.LVL124:
 109:tinyprintf.c  ****     }
 995              		.loc 1 109 0
 996 01dc 8DF80C30 		strb	r3, [sp, #12]
 997              	.LVL125:
 998              	.L124:
 111:tinyprintf.c  **** }
 999              		.loc 1 111 0
 1000 01e0 01AA     		add	r2, sp, #4
 1001 01e2 FFF7FEFF 		bl	ulli2a
 1002              	.LVL126:
 1003 01e6 30E0     		b	.L130
 1004              	.L123:
 1005              	.LBE25:
 1006              	.LBE26:
 368:tinyprintf.c  ****                     li2a(va_arg(va, long int), &p);
 1007              		.loc 1 368 0
 1008 01e8 012B     		cmp	r3, #1
 369:tinyprintf.c  ****                 else
 1009              		.loc 1 369 0
 1010 01ea 2068     		ldr	r0, [r4]
 1011 01ec 04F10409 		add	r9, r4, #4
 368:tinyprintf.c  ****                     li2a(va_arg(va, long int), &p);
 1012              		.loc 1 368 0
 1013 01f0 07D1     		bne	.L126
 1014              	.LVL127:
 1015              	.LBB27:
 1016              	.LBB28:
 137:tinyprintf.c  ****         num = -num;
ARM GAS  /tmp/cc6Mxyx4.s 			page 29


 1017              		.loc 1 137 0
 1018 01f2 0028     		cmp	r0, #0
 139:tinyprintf.c  ****     }
 1019              		.loc 1 139 0
 1020 01f4 BEBF     		ittt	lt
 1021 01f6 2D23     		movlt	r3, #45
 138:tinyprintf.c  ****         p->sign = '-';
 1022              		.loc 1 138 0
 1023 01f8 4042     		rsblt	r0, r0, #0
 1024              	.LVL128:
 139:tinyprintf.c  ****     }
 1025              		.loc 1 139 0
 1026 01fa 8DF80C30 		strblt	r3, [sp, #12]
 141:tinyprintf.c  **** }
 1027              		.loc 1 141 0
 1028 01fe 01A9     		add	r1, sp, #4
 1029              	.LVL129:
 1030 0200 84E0     		b	.L242
 1031              	.LVL130:
 1032              	.L126:
 1033              	.LBE28:
 1034              	.LBE27:
 1035              	.LBB29:
 1036              	.LBB30:
 166:tinyprintf.c  ****         num = -num;
 1037              		.loc 1 166 0
 1038 0202 0028     		cmp	r0, #0
 1039 0204 1DDA     		bge	.L241
 168:tinyprintf.c  ****     }
 1040              		.loc 1 168 0
 1041 0206 2D23     		movs	r3, #45
 167:tinyprintf.c  ****         p->sign = '-';
 1042              		.loc 1 167 0
 1043 0208 4042     		negs	r0, r0
 1044              	.LVL131:
 168:tinyprintf.c  ****     }
 1045              		.loc 1 168 0
 1046 020a 8DF80C30 		strb	r3, [sp, #12]
 1047 020e 18E0     		b	.L241
 1048              	.LVL132:
 1049              	.L106:
 1050              	.LBE30:
 1051              	.LBE29:
 341:tinyprintf.c  ****             case 0:
 1052              		.loc 1 341 0
 1053 0210 692B     		cmp	r3, #105
 1054 0212 00F08280 		beq	.L151
 1055 0216 41D9     		bls	.L247
 1056 0218 732B     		cmp	r3, #115
 1057 021a 33D0     		beq	.L115
 1058 021c 00F28E80 		bhi	.L139
 1059              	.LVL133:
 1060              	.L235:
 1061 0220 6F2B     		cmp	r3, #111
 1062 0222 19D0     		beq	.L117
 1063 0224 702B     		cmp	r3, #112
 1064 0226 45D1     		bne	.L87
ARM GAS  /tmp/cc6Mxyx4.s 			page 30


 1065              	.L118:
 1066              	.LVL134:
 377:tinyprintf.c  **** # if defined(SIZEOF_INT) && SIZEOF_POINTER <= SIZEOF_INT
 1067              		.loc 1 377 0
 1068 0228 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 1069              	.LVL135:
 388:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 1070              		.loc 1 388 0
 1071 022c 1022     		movs	r2, #16
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1072              		.loc 1 389 0
 1073 022e 43F00203 		orr	r3, r3, #2
 1074 0232 6FF38203 		bfc	r3, #2, #1
 388:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 1075              		.loc 1 388 0
 1076 0236 0492     		str	r2, [sp, #16]
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1077              		.loc 1 389 0
 1078 0238 8DF80430 		strb	r3, [sp, #4]
 1079              	.L136:
 1080              	.LVL136:
 400:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1081              		.loc 1 400 0
 1082 023c 2068     		ldr	r0, [r4]
 1083 023e 04F10409 		add	r9, r4, #4
 1084              	.L241:
 1085 0242 01A9     		add	r1, sp, #4
 1086              	.L243:
 1087 0244 FFF7FEFF 		bl	ui2a
 1088              	.LVL137:
 1089              	.L234:
 1090 0248 4C46     		mov	r4, r9
 1091              	.L130:
 401:tinyprintf.c  ****                 break;
 1092              		.loc 1 401 0
 1093 024a 3846     		mov	r0, r7
 1094 024c 4146     		mov	r1, r8
 1095 024e 01AA     		add	r2, sp, #4
 1096 0250 FFF7FEFF 		bl	putchw
 1097              	.LVL138:
 402:tinyprintf.c  ****             case 'o':
 1098              		.loc 1 402 0
 1099 0254 2EE0     		b	.L87
 1100              	.LVL139:
 1101              	.L145:
 335:tinyprintf.c  ****                   lng = 2;
 1102              		.loc 1 335 0
 1103 0256 4D46     		mov	r5, r9
 1104              	.LVL140:
 1105              	.L117:
 404:tinyprintf.c  ****                 ui2a(va_arg(va, unsigned int), &p);
 1106              		.loc 1 404 0
 1107 0258 0823     		movs	r3, #8
 1108              	.LVL141:
 405:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1109              		.loc 1 405 0
 1110 025a 2068     		ldr	r0, [r4]
ARM GAS  /tmp/cc6Mxyx4.s 			page 31


 1111 025c 01A9     		add	r1, sp, #4
 404:tinyprintf.c  ****                 ui2a(va_arg(va, unsigned int), &p);
 1112              		.loc 1 404 0
 1113 025e 0493     		str	r3, [sp, #16]
 405:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1114              		.loc 1 405 0
 1115 0260 FFF7FEFF 		bl	ui2a
 1116              	.LVL142:
 406:tinyprintf.c  ****                 break;
 1117              		.loc 1 406 0
 1118 0264 3846     		mov	r0, r7
 1119 0266 4146     		mov	r1, r8
 1120 0268 01AA     		add	r2, sp, #4
 405:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1121              		.loc 1 405 0
 1122 026a 04F10409 		add	r9, r4, #4
 406:tinyprintf.c  ****                 break;
 1123              		.loc 1 406 0
 1124 026e FFF7FEFF 		bl	putchw
 1125              	.LVL143:
 1126 0272 11E0     		b	.L238
 1127              	.LVL144:
 1128              	.L143:
 335:tinyprintf.c  ****                   lng = 2;
 1129              		.loc 1 335 0
 1130 0274 4D46     		mov	r5, r9
 1131              	.LVL145:
 1132              	.L114:
 409:tinyprintf.c  ****                 break;
 1133              		.loc 1 409 0
 1134 0276 3846     		mov	r0, r7
 1135 0278 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 1136 027a 04F10409 		add	r9, r4, #4
 1137 027e C047     		blx	r8
 1138              	.LVL146:
 1139 0280 0AE0     		b	.L238
 1140              	.LVL147:
 1141              	.L147:
 335:tinyprintf.c  ****                   lng = 2;
 1142              		.loc 1 335 0
 1143 0282 4D46     		mov	r5, r9
 1144              	.LVL148:
 1145              	.L115:
 412:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1146              		.loc 1 412 0
 1147 0284 2368     		ldr	r3, [r4]
 1148              	.LVL149:
 413:tinyprintf.c  ****                 p.bf = bf;
 1149              		.loc 1 413 0
 1150 0286 3846     		mov	r0, r7
 1151 0288 4146     		mov	r1, r8
 1152 028a 01AA     		add	r2, sp, #4
 412:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1153              		.loc 1 412 0
 1154 028c 0593     		str	r3, [sp, #20]
 1155 028e 04F10409 		add	r9, r4, #4
 413:tinyprintf.c  ****                 p.bf = bf;
ARM GAS  /tmp/cc6Mxyx4.s 			page 32


 1156              		.loc 1 413 0
 1157 0292 FFF7FEFF 		bl	putchw
 1158              	.LVL150:
 414:tinyprintf.c  ****                 break;
 1159              		.loc 1 414 0
 1160 0296 0596     		str	r6, [sp, #20]
 1161              	.L238:
 412:tinyprintf.c  ****                 putchw(putp, putf, &p);
 1162              		.loc 1 412 0
 1163 0298 4C46     		mov	r4, r9
 415:tinyprintf.c  ****             case '%':
 1164              		.loc 1 415 0
 1165 029a 0BE0     		b	.L87
 1166              	.LVL151:
 1167              	.L247:
 341:tinyprintf.c  ****             case 0:
 1168              		.loc 1 341 0
 1169 029c 582B     		cmp	r3, #88
 1170 029e 40D0     		beq	.L135
 1171 02a0 37D8     		bhi	.L138
 1172              	.LVL152:
 1173              	.L240:
 1174 02a2 002B     		cmp	r3, #0
 1175 02a4 4ED0     		beq	.L83
 1176 02a6 252B     		cmp	r3, #37
 1177 02a8 04D1     		bne	.L87
 1178              	.L113:
 417:tinyprintf.c  ****             default:
 1179              		.loc 1 417 0
 1180 02aa 3846     		mov	r0, r7
 1181 02ac 2521     		movs	r1, #37
 1182              	.LVL153:
 1183              	.L237:
 1184 02ae C047     		blx	r8
 1185              	.LVL154:
 1186 02b0 00E0     		b	.L87
 1187              	.LVL155:
 1188              	.L141:
 335:tinyprintf.c  ****                   lng = 2;
 1189              		.loc 1 335 0
 1190 02b2 4D46     		mov	r5, r9
 1191              	.LVL156:
 1192              	.L87:
 1193 02b4 2A46     		mov	r2, r5
 1194 02b6 ABE6     		b	.L84
 1195              	.LVL157:
 1196              	.L110:
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1197              		.loc 1 389 0
 1198 02b8 A3F15800 		sub	r0, r3, #88
 1199 02bc 4342     		rsbs	r3, r0, #0
 1200              	.LVL158:
 1201 02be 9DF80410 		ldrb	r1, [sp, #4]	@ zero_extendqisi2
 1202 02c2 4341     		adcs	r3, r3, r0
 1203 02c4 63F38201 		bfi	r1, r3, #2, #1
 388:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 1204              		.loc 1 388 0
ARM GAS  /tmp/cc6Mxyx4.s 			page 33


 1205 02c8 1022     		movs	r2, #16
 393:tinyprintf.c  ****                 else
 1206              		.loc 1 393 0
 1207 02ca E31D     		adds	r3, r4, #7
 1208 02cc 23F00703 		bic	r3, r3, #7
 388:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 1209              		.loc 1 388 0
 1210 02d0 0492     		str	r2, [sp, #16]
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1211              		.loc 1 389 0
 1212 02d2 0CAA     		add	r2, sp, #48
 1213 02d4 02F82C1D 		strb	r1, [r2, #-44]!
 393:tinyprintf.c  ****                 else
 1214              		.loc 1 393 0
 1215 02d8 D3E90001 		ldrd	r0, [r3]
 1216              	.LVL159:
 1217 02dc 03F10804 		add	r4, r3, #8
 1218 02e0 4D46     		mov	r5, r9
 1219              	.LVL160:
 1220 02e2 FFF7FEFF 		bl	ulli2a
 1221              	.LVL161:
 1222 02e6 B0E7     		b	.L130
 1223              	.LVL162:
 1224              	.L246:
 341:tinyprintf.c  ****             case 0:
 1225              		.loc 1 341 0
 1226 02e8 782B     		cmp	r3, #120
 1227 02ea E3D1     		bne	.L87
 1228              	.L131:
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1229              		.loc 1 389 0
 1230 02ec A3F15801 		sub	r1, r3, #88
 388:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 1231              		.loc 1 388 0
 1232 02f0 1022     		movs	r2, #16
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1233              		.loc 1 389 0
 1234 02f2 4B42     		rsbs	r3, r1, #0
 1235              	.LVL163:
 388:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 1236              		.loc 1 388 0
 1237 02f4 0492     		str	r2, [sp, #16]
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1238              		.loc 1 389 0
 1239 02f6 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 1240 02fa 4B41     		adcs	r3, r3, r1
 1241 02fc 63F38202 		bfi	r2, r3, #2, #1
 1242 0300 0CA9     		add	r1, sp, #48
 397:tinyprintf.c  ****                 else
 1243              		.loc 1 397 0
 1244 0302 2068     		ldr	r0, [r4]
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1245              		.loc 1 389 0
 1246 0304 01F82C2D 		strb	r2, [r1, #-44]!
 397:tinyprintf.c  ****                 else
 1247              		.loc 1 397 0
 1248 0308 04F10409 		add	r9, r4, #4
ARM GAS  /tmp/cc6Mxyx4.s 			page 34


 1249              	.LVL164:
 1250              	.L242:
 1251 030c FFF7FEFF 		bl	uli2a
 1252              	.LVL165:
 1253 0310 9AE7     		b	.L234
 1254              	.LVL166:
 1255              	.L138:
 341:tinyprintf.c  ****             case 0:
 1256              		.loc 1 341 0
 1257 0312 632B     		cmp	r3, #99
 1258 0314 AFD0     		beq	.L114
 1259 0316 642B     		cmp	r3, #100
 1260 0318 CCD1     		bne	.L87
 1261              	.L151:
 272:tinyprintf.c  **** #endif
 1262              		.loc 1 272 0
 1263 031a 0023     		movs	r3, #0
 1264              	.LVL167:
 1265 031c 4AE7     		b	.L108
 1266              	.LVL168:
 1267              	.L248:
 341:tinyprintf.c  ****             case 0:
 1268              		.loc 1 341 0
 1269 031e 782B     		cmp	r3, #120
 1270 0320 C8D1     		bne	.L87
 1271              	.L135:
 388:tinyprintf.c  ****                 p.uc = (ch == 'X')?1:0;
 1272              		.loc 1 388 0
 1273 0322 1022     		movs	r2, #16
 1274 0324 0492     		str	r2, [sp, #16]
 389:tinyprintf.c  **** #ifdef PRINTF_LONG_SUPPORT
 1275              		.loc 1 389 0
 1276 0326 A3F15802 		sub	r2, r3, #88
 1277 032a 5342     		rsbs	r3, r2, #0
 1278              	.LVL169:
 1279 032c 5341     		adcs	r3, r3, r2
 1280 032e 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 1281 0332 63F38202 		bfi	r2, r3, #2, #1
 1282 0336 8DF80420 		strb	r2, [sp, #4]
 1283 033a 7FE7     		b	.L136
 1284              	.LVL170:
 1285              	.L139:
 341:tinyprintf.c  ****             case 0:
 1286              		.loc 1 341 0
 1287 033c 752B     		cmp	r3, #117
 1288 033e EED1     		bne	.L248
 272:tinyprintf.c  **** #endif
 1289              		.loc 1 272 0
 1290 0340 0023     		movs	r3, #0
 1291              	.LVL171:
 1292 0342 17E7     		b	.L119
 1293              	.LVL172:
 1294              	.L83:
 1295              	.LBE16:
 424:tinyprintf.c  **** 
 1296              		.loc 1 424 0
 1297 0344 0DB0     		add	sp, sp, #52
ARM GAS  /tmp/cc6Mxyx4.s 			page 35


 1298              		.cfi_def_cfa_offset 28
 1299              		@ sp needed
 1300 0346 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1301              		.cfi_endproc
 1302              	.LFE9:
 1304              		.section	.text.init_printf,"ax",%progbits
 1305              		.align	1
 1306              		.global	init_printf
 1307              		.thumb
 1308              		.thumb_func
 1310              	init_printf:
 1311              	.LFB10:
 431:tinyprintf.c  ****     stdout_putf = putf;
 1312              		.loc 1 431 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 0
 1315              		@ frame_needed = 0, uses_anonymous_args = 0
 1316              		@ link register save eliminated.
 1317              	.LVL173:
 432:tinyprintf.c  ****     stdout_putp = putp;
 1318              		.loc 1 432 0
 1319 0000 014B     		ldr	r3, .L250
 1320 0002 1960     		str	r1, [r3]
 433:tinyprintf.c  **** }
 1321              		.loc 1 433 0
 1322 0004 5860     		str	r0, [r3, #4]
 1323 0006 7047     		bx	lr
 1324              	.L251:
 1325              		.align	2
 1326              	.L250:
 1327 0008 00000000 		.word	.LANCHOR0
 1328              		.cfi_endproc
 1329              	.LFE10:
 1331              		.section	.text.tfp_printf,"ax",%progbits
 1332              		.align	1
 1333              		.global	tfp_printf
 1334              		.thumb
 1335              		.thumb_func
 1337              	tfp_printf:
 1338              	.LFB11:
 437:tinyprintf.c  ****     va_list va;
 1339              		.loc 1 437 0
 1340              		.cfi_startproc
 1341              		@ args = 4, pretend = 16, frame = 8
 1342              		@ frame_needed = 0, uses_anonymous_args = 1
 1343              	.LVL174:
 1344 0000 0FB4     		push	{r0, r1, r2, r3}
 1345              		.cfi_def_cfa_offset 16
 1346              		.cfi_offset 0, -16
 1347              		.cfi_offset 1, -12
 1348              		.cfi_offset 2, -8
 1349              		.cfi_offset 3, -4
 1350 0002 07B5     		push	{r0, r1, r2, lr}
 1351              		.cfi_def_cfa_offset 32
 1352              		.cfi_offset 14, -20
 440:tinyprintf.c  ****     va_end(va);
 1353              		.loc 1 440 0
ARM GAS  /tmp/cc6Mxyx4.s 			page 36


 1354 0004 0649     		ldr	r1, .L253
 437:tinyprintf.c  ****     va_list va;
 1355              		.loc 1 437 0
 1356 0006 04AB     		add	r3, sp, #16
 1357 0008 53F8042B 		ldr	r2, [r3], #4
 440:tinyprintf.c  ****     va_end(va);
 1358              		.loc 1 440 0
 1359 000c 4868     		ldr	r0, [r1, #4]
 1360 000e 0968     		ldr	r1, [r1]
 439:tinyprintf.c  ****     tfp_format(stdout_putp, stdout_putf, fmt, va);
 1361              		.loc 1 439 0
 1362 0010 0193     		str	r3, [sp, #4]
 440:tinyprintf.c  ****     va_end(va);
 1363              		.loc 1 440 0
 1364 0012 FFF7FEFF 		bl	tfp_format
 1365              	.LVL175:
 442:tinyprintf.c  **** #endif
 1366              		.loc 1 442 0
 1367 0016 03B0     		add	sp, sp, #12
 1368              		.cfi_def_cfa_offset 20
 1369              		@ sp needed
 1370 0018 5DF804EB 		ldr	lr, [sp], #4
 1371              		.cfi_restore 14
 1372              		.cfi_def_cfa_offset 16
 1373 001c 04B0     		add	sp, sp, #16
 1374              		.cfi_restore 3
 1375              		.cfi_restore 2
 1376              		.cfi_restore 1
 1377              		.cfi_restore 0
 1378              		.cfi_def_cfa_offset 0
 1379 001e 7047     		bx	lr
 1380              	.L254:
 1381              		.align	2
 1382              	.L253:
 1383 0020 00000000 		.word	.LANCHOR0
 1384              		.cfi_endproc
 1385              	.LFE11:
 1387              		.section	.text.tfp_vsnprintf,"ax",%progbits
 1388              		.align	1
 1389              		.global	tfp_vsnprintf
 1390              		.thumb
 1391              		.thumb_func
 1393              	tfp_vsnprintf:
 1394              	.LFB13:
 462:tinyprintf.c  ****   struct _vsnprintf_putcf_data data;
 1395              		.loc 1 462 0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 16
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              	.LVL176:
 1400 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 1401              		.cfi_def_cfa_offset 24
 1402              		.cfi_offset 4, -8
 1403              		.cfi_offset 14, -4
 1404              	.LVL177:
 1405 0002 0024     		movs	r4, #0
 465:tinyprintf.c  ****     return 0;
ARM GAS  /tmp/cc6Mxyx4.s 			page 37


 1406              		.loc 1 465 0
 1407 0004 81B1     		cbz	r1, .L259
 469:tinyprintf.c  ****   data.num_chars = 0;
 1408              		.loc 1 469 0
 1409 0006 0139     		subs	r1, r1, #1
 1410              	.LVL178:
 468:tinyprintf.c  ****   data.dest_capacity = size-1;
 1411              		.loc 1 468 0
 1412 0008 0290     		str	r0, [sp, #8]
 469:tinyprintf.c  ****   data.num_chars = 0;
 1413              		.loc 1 469 0
 1414 000a 0191     		str	r1, [sp, #4]
 471:tinyprintf.c  **** 
 1415              		.loc 1 471 0
 1416 000c 01A8     		add	r0, sp, #4
 1417              	.LVL179:
 1418 000e 0849     		ldr	r1, .L260
 1419              	.LVL180:
 470:tinyprintf.c  ****   tfp_format(&data, _vsnprintf_putcf, format, ap);
 1420              		.loc 1 470 0
 1421 0010 0394     		str	r4, [sp, #12]
 471:tinyprintf.c  **** 
 1422              		.loc 1 471 0
 1423 0012 FFF7FEFF 		bl	tfp_format
 1424              	.LVL181:
 473:tinyprintf.c  ****     data.dest[data.num_chars] = '\0';
 1425              		.loc 1 473 0
 1426 0016 0399     		ldr	r1, [sp, #12]
 1427 0018 019B     		ldr	r3, [sp, #4]
 1428 001a 029A     		ldr	r2, [sp, #8]
 1429 001c 9942     		cmp	r1, r3
 474:tinyprintf.c  ****   else
 1430              		.loc 1 474 0
 1431 001e 34BF     		ite	cc
 1432 0020 5454     		strbcc	r4, [r2, r1]
 476:tinyprintf.c  **** 
 1433              		.loc 1 476 0
 1434 0022 D454     		strbcs	r4, [r2, r3]
 478:tinyprintf.c  **** }
 1435              		.loc 1 478 0
 1436 0024 0398     		ldr	r0, [sp, #12]
 1437 0026 00E0     		b	.L256
 1438              	.LVL182:
 1439              	.L259:
 466:tinyprintf.c  **** 
 1440              		.loc 1 466 0
 1441 0028 0846     		mov	r0, r1
 1442              	.LVL183:
 1443              	.L256:
 479:tinyprintf.c  **** 
 1444              		.loc 1 479 0
 1445 002a 04B0     		add	sp, sp, #16
 1446              		.cfi_def_cfa_offset 8
 1447              		@ sp needed
 1448 002c 10BD     		pop	{r4, pc}
 1449              	.L261:
 1450 002e 00BF     		.align	2
ARM GAS  /tmp/cc6Mxyx4.s 			page 38


 1451              	.L260:
 1452 0030 00000000 		.word	_vsnprintf_putcf
 1453              		.cfi_endproc
 1454              	.LFE13:
 1456              		.section	.text.tfp_snprintf,"ax",%progbits
 1457              		.align	1
 1458              		.global	tfp_snprintf
 1459              		.thumb
 1460              		.thumb_func
 1462              	tfp_snprintf:
 1463              	.LFB14:
 482:tinyprintf.c  ****   va_list ap;
 1464              		.loc 1 482 0
 1465              		.cfi_startproc
 1466              		@ args = 4, pretend = 8, frame = 8
 1467              		@ frame_needed = 0, uses_anonymous_args = 1
 1468              	.LVL184:
 1469 0000 0CB4     		push	{r2, r3}
 1470              		.cfi_def_cfa_offset 8
 1471              		.cfi_offset 2, -8
 1472              		.cfi_offset 3, -4
 1473 0002 07B5     		push	{r0, r1, r2, lr}
 1474              		.cfi_def_cfa_offset 24
 1475              		.cfi_offset 14, -12
 482:tinyprintf.c  ****   va_list ap;
 1476              		.loc 1 482 0
 1477 0004 04AB     		add	r3, sp, #16
 1478 0006 53F8042B 		ldr	r2, [r3], #4
 486:tinyprintf.c  ****   retval = tfp_vsnprintf(str, size, format, ap);
 1479              		.loc 1 486 0
 1480 000a 0193     		str	r3, [sp, #4]
 487:tinyprintf.c  ****   va_end(ap);
 1481              		.loc 1 487 0
 1482 000c FFF7FEFF 		bl	tfp_vsnprintf
 1483              	.LVL185:
 490:tinyprintf.c  **** 
 1484              		.loc 1 490 0
 1485 0010 03B0     		add	sp, sp, #12
 1486              		.cfi_def_cfa_offset 12
 1487              		@ sp needed
 1488 0012 5DF804EB 		ldr	lr, [sp], #4
 1489              		.cfi_restore 14
 1490              		.cfi_def_cfa_offset 8
 1491 0016 02B0     		add	sp, sp, #8
 1492              		.cfi_restore 3
 1493              		.cfi_restore 2
 1494              		.cfi_def_cfa_offset 0
 1495 0018 7047     		bx	lr
 1496              		.cfi_endproc
 1497              	.LFE14:
 1499              		.section	.text.tfp_vsprintf,"ax",%progbits
 1500              		.align	1
 1501              		.global	tfp_vsprintf
 1502              		.thumb
 1503              		.thumb_func
 1505              	tfp_vsprintf:
 1506              	.LFB16:
ARM GAS  /tmp/cc6Mxyx4.s 			page 39


 502:tinyprintf.c  **** }
 503:tinyprintf.c  **** 
 504:tinyprintf.c  **** int tfp_vsprintf(char *str, const char *format, va_list ap)
 505:tinyprintf.c  **** {
 1507              		.loc 1 505 0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 8
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 1511              	.LVL186:
 1512 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 1513              		.cfi_def_cfa_offset 24
 1514              		.cfi_offset 4, -12
 1515              		.cfi_offset 5, -8
 1516              		.cfi_offset 14, -4
 1517              	.LVL187:
 1518              		.loc 1 505 0
 1519 0002 0D46     		mov	r5, r1
 1520              	.LVL188:
 1521 0004 1346     		mov	r3, r2
 506:tinyprintf.c  ****   struct _vsprintf_putcf_data data;
 507:tinyprintf.c  ****   data.dest = str;
 1522              		.loc 1 507 0
 1523 0006 0090     		str	r0, [sp]
 508:tinyprintf.c  ****   data.num_chars = 0;
 1524              		.loc 1 508 0
 1525 0008 0024     		movs	r4, #0
 509:tinyprintf.c  ****   tfp_format(&data, _vsprintf_putcf, format, ap);
 1526              		.loc 1 509 0
 1527 000a 6846     		mov	r0, sp
 1528              	.LVL189:
 1529 000c 2A46     		mov	r2, r5
 1530              	.LVL190:
 1531 000e 0549     		ldr	r1, .L264
 1532              	.LVL191:
 508:tinyprintf.c  ****   data.num_chars = 0;
 1533              		.loc 1 508 0
 1534 0010 0194     		str	r4, [sp, #4]
 1535              		.loc 1 509 0
 1536 0012 FFF7FEFF 		bl	tfp_format
 1537              	.LVL192:
 510:tinyprintf.c  ****   data.dest[data.num_chars] = '\0';
 1538              		.loc 1 510 0
 1539 0016 9DE80C00 		ldmia	sp, {r2, r3}
 1540 001a D454     		strb	r4, [r2, r3]
 511:tinyprintf.c  ****   return data.num_chars;
 512:tinyprintf.c  **** }
 1541              		.loc 1 512 0
 1542 001c 0198     		ldr	r0, [sp, #4]
 1543 001e 03B0     		add	sp, sp, #12
 1544              		.cfi_def_cfa_offset 12
 1545              		@ sp needed
 1546 0020 30BD     		pop	{r4, r5, pc}
 1547              	.LVL193:
 1548              	.L265:
 1549 0022 00BF     		.align	2
 1550              	.L264:
 1551 0024 00000000 		.word	_vsprintf_putcf
ARM GAS  /tmp/cc6Mxyx4.s 			page 40


 1552              		.cfi_endproc
 1553              	.LFE16:
 1555              		.section	.text.tfp_sprintf,"ax",%progbits
 1556              		.align	1
 1557              		.global	tfp_sprintf
 1558              		.thumb
 1559              		.thumb_func
 1561              	tfp_sprintf:
 1562              	.LFB17:
 513:tinyprintf.c  **** 
 514:tinyprintf.c  **** int tfp_sprintf(char *str, const char *format, ...)
 515:tinyprintf.c  **** {
 1563              		.loc 1 515 0
 1564              		.cfi_startproc
 1565              		@ args = 4, pretend = 12, frame = 8
 1566              		@ frame_needed = 0, uses_anonymous_args = 1
 1567              	.LVL194:
 1568 0000 0EB4     		push	{r1, r2, r3}
 1569              		.cfi_def_cfa_offset 12
 1570              		.cfi_offset 1, -12
 1571              		.cfi_offset 2, -8
 1572              		.cfi_offset 3, -4
 1573 0002 03B5     		push	{r0, r1, lr}
 1574              		.cfi_def_cfa_offset 24
 1575              		.cfi_offset 14, -16
 1576              		.loc 1 515 0
 1577 0004 03AA     		add	r2, sp, #12
 1578 0006 52F8041B 		ldr	r1, [r2], #4
 516:tinyprintf.c  ****   va_list ap;
 517:tinyprintf.c  ****   int retval;
 518:tinyprintf.c  **** 
 519:tinyprintf.c  ****   va_start(ap, format);
 1579              		.loc 1 519 0
 1580 000a 0192     		str	r2, [sp, #4]
 520:tinyprintf.c  ****   retval = tfp_vsprintf(str, format, ap);
 1581              		.loc 1 520 0
 1582 000c FFF7FEFF 		bl	tfp_vsprintf
 1583              	.LVL195:
 521:tinyprintf.c  ****   va_end(ap);
 522:tinyprintf.c  ****   return retval;
 523:tinyprintf.c  **** }
 1584              		.loc 1 523 0
 1585 0010 02B0     		add	sp, sp, #8
 1586              		.cfi_def_cfa_offset 16
 1587              		@ sp needed
 1588 0012 5DF804EB 		ldr	lr, [sp], #4
 1589              		.cfi_restore 14
 1590              		.cfi_def_cfa_offset 12
 1591 0016 03B0     		add	sp, sp, #12
 1592              		.cfi_restore 3
 1593              		.cfi_restore 2
 1594              		.cfi_restore 1
 1595              		.cfi_def_cfa_offset 0
 1596 0018 7047     		bx	lr
 1597              		.cfi_endproc
 1598              	.LFE17:
 1600              		.bss
ARM GAS  /tmp/cc6Mxyx4.s 			page 41


 1601              		.align	2
 1602              		.set	.LANCHOR0,. + 0
 1605              	stdout_putf:
 1606 0000 00000000 		.space	4
 1609              	stdout_putp:
 1610 0004 00000000 		.space	4
 1611              		.text
 1612              	.Letext0:
 1613              		.file 2 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h"
 1614              		.file 3 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 1615              		.file 4 "tinyprintf.h"
 1616              		.file 5 "<built-in>"
ARM GAS  /tmp/cc6Mxyx4.s 			page 42


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tinyprintf.c
     /tmp/cc6Mxyx4.s:20     .text.ulli2a:0000000000000000 $t
     /tmp/cc6Mxyx4.s:24     .text.ulli2a:0000000000000000 ulli2a
     /tmp/cc6Mxyx4.s:170    .text.uli2a:0000000000000000 $t
     /tmp/cc6Mxyx4.s:174    .text.uli2a:0000000000000000 uli2a
     /tmp/cc6Mxyx4.s:273    .text.ui2a:0000000000000000 $t
     /tmp/cc6Mxyx4.s:277    .text.ui2a:0000000000000000 ui2a
     /tmp/cc6Mxyx4.s:376    .text.putchw:0000000000000000 $t
     /tmp/cc6Mxyx4.s:380    .text.putchw:0000000000000000 putchw
     /tmp/cc6Mxyx4.s:585    .text._vsnprintf_putcf:0000000000000000 $t
     /tmp/cc6Mxyx4.s:589    .text._vsnprintf_putcf:0000000000000000 _vsnprintf_putcf
     /tmp/cc6Mxyx4.s:615    .text._vsprintf_putcf:0000000000000000 $t
     /tmp/cc6Mxyx4.s:619    .text._vsprintf_putcf:0000000000000000 _vsprintf_putcf
     /tmp/cc6Mxyx4.s:641    .text.tfp_format:0000000000000000 $t
     /tmp/cc6Mxyx4.s:646    .text.tfp_format:0000000000000000 tfp_format
     /tmp/cc6Mxyx4.s:1305   .text.init_printf:0000000000000000 $t
     /tmp/cc6Mxyx4.s:1310   .text.init_printf:0000000000000000 init_printf
     /tmp/cc6Mxyx4.s:1327   .text.init_printf:0000000000000008 $d
     /tmp/cc6Mxyx4.s:1332   .text.tfp_printf:0000000000000000 $t
     /tmp/cc6Mxyx4.s:1337   .text.tfp_printf:0000000000000000 tfp_printf
     /tmp/cc6Mxyx4.s:1383   .text.tfp_printf:0000000000000020 $d
     /tmp/cc6Mxyx4.s:1388   .text.tfp_vsnprintf:0000000000000000 $t
     /tmp/cc6Mxyx4.s:1393   .text.tfp_vsnprintf:0000000000000000 tfp_vsnprintf
     /tmp/cc6Mxyx4.s:1452   .text.tfp_vsnprintf:0000000000000030 $d
     /tmp/cc6Mxyx4.s:1457   .text.tfp_snprintf:0000000000000000 $t
     /tmp/cc6Mxyx4.s:1462   .text.tfp_snprintf:0000000000000000 tfp_snprintf
     /tmp/cc6Mxyx4.s:1500   .text.tfp_vsprintf:0000000000000000 $t
     /tmp/cc6Mxyx4.s:1505   .text.tfp_vsprintf:0000000000000000 tfp_vsprintf
     /tmp/cc6Mxyx4.s:1551   .text.tfp_vsprintf:0000000000000024 $d
     /tmp/cc6Mxyx4.s:1556   .text.tfp_sprintf:0000000000000000 $t
     /tmp/cc6Mxyx4.s:1561   .text.tfp_sprintf:0000000000000000 tfp_sprintf
     /tmp/cc6Mxyx4.s:1601   .bss:0000000000000000 $d
     /tmp/cc6Mxyx4.s:1605   .bss:0000000000000000 stdout_putf
     /tmp/cc6Mxyx4.s:1609   .bss:0000000000000004 stdout_putp
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uldivmod
